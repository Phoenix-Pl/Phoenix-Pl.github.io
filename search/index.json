[{"content":"PS:这只是个菜鸟的小小记录，参考很多大佬的博客，有什么不正确的地方欢迎指正\nPASS-01 解题思路:（绕开前端JS验证）\n尝试：首先先挂了代理想上传个php用Burp抓个包看看，但是还没抓到包就提示该文件不允许上传，猜想应该是前段JS验证\n贴一下代码：\nfunction checkFile() { var file = document.getElementsByName('upload_file')[0].value; if (file == null || file == \u0026quot;\u0026quot;) { alert(\u0026quot;请选择要上传的文件!\u0026quot;); return false; } //定义允许上传的文件类型 var allow_ext = \u0026quot;.jpg|.png|.gif\u0026quot;; //提取上传文件的类型 var ext_name = file.substring(file.lastIndexOf(\u0026quot;.\u0026quot;)); //判断上传文件类型是否允许上传 if (allow_ext.indexOf(ext_name + \u0026quot;|\u0026quot;) == -1) { var errMsg = \u0026quot;该文件不允许上传，请上传\u0026quot; + allow_ext + \u0026quot;类型的文件,当前文件类型为：\u0026quot; + ext_name; alert(errMsg); return false; } }  部分代码解释：\nvar //用来定义变量 alert //js函数，功能是弹出对话框并显示其中的内容 substring //jsp函数，用于提取字符串中介于两个指定下标之间的字符。 file.substring(file.lastIndexOf(\u0026quot;.\u0026quot;));//提取file变量·后面的字母，也就是后缀 substring：提取A到B之间的字符，jsp函数 string.substring (from A, to B) lastIndexOf( ) ：返回指定的字符串值最后出现的位置，如果指定第二个参数 start，则在一个字符串中的指定位置从后向前搜索。没有找到返回-1。 indexOf() ：返回指定的字符串值在字符串中首次出现的位置。如果没有找到匹配的字符串则返回 -1。 file_exists() ：检查文件或目录是否存在 语法：file_exists ( string $filename ) $filename：文件或目录的路径 （1）、查找字符串 \u0026quot;runoob\u0026quot; 最后出现的位置:（**lastindexOf**） var str=\u0026quot;I am from runoob，welcome to runoob site.\u0026quot;; var n=str.lastIndexOf(\u0026quot;runoob\u0026quot;); //输出28 （2）、查找字符串 \u0026quot;welcome\u0026quot;:（**indexOf**） var str=\u0026quot;Hello world, welcome to the universe.\u0026quot;; var n=str.indexOf(\u0026quot;welcome\u0026quot;); //输出 13  1、方法一（F12修改表单） 打开F12，找到上传部分，发现==CheckFile函数==，直接将这==onsubmit==将onsubmit事件删除即可，使点提交(submit)后不会被调用CheckFile函数进行检查就好\nCheckFile函数： 为asp实现检查某一文件是否存在的代码 onsubmit事件: onsubmit 事件会在表单中的确认按钮被点击时发生\n然后直接上传一句话木马php文件即可，接着蚁剑连接\n2、方法二（将PHP文件后缀改成允许上传的后缀，抓包改回php）\nPASS-02 解题思路：（MIME验证）（ content-type 检测） 贴一下代码\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { if (($_FILES['upload_file']['type'] == 'image/jpeg') || ($_FILES['upload_file']['type'] == 'image/png') || ($_FILES['upload_file']['type'] == 'image/gif')) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' . $_FILES['upload_file']['name'] if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '文件类型不正确，请重新上传！'; } } else { $msg = UPLOAD_PATH.'文件夹不存在,请手工创建！'; } }  这里解释一下MIME: 你一定听说过文件内容类型或者说通过==抓包==你一定听说过 Content-Type: text/html 这种类似的，其实，这就是MIME。\nMIME(（Multipurpose Internet Mail Extensions）多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式每个MIME类型由两部分组成，前面是数据的大类别，例如声音 audio、图象 Image等,后面定义具体的种类。\n常见的MME类型，例如：\n  超文本标记语言文本 .html,html text/htm\n  普通文本 .txt text/plain\n  RTF文本. rtf application/rtf\n  GIF图形 .gif image/gif\n  JPEG图形 . jpg image/jpeg\n  函数解释：\nstrrchr ()： 查找指定字符在字符串中的最后一次出现 语法：strrchr ( string $haystack , mixed $needle ) $haystack：被查找的字符串 $needle：出现的部分字符串 该函数返回needle在 haystack 字符串中的最后一次出现的位置后面haystack一部分， 拓展： strstr() - 查找字符串的首次出现 strrpos() - 计算指定字符串在目标字符串中最后一次出现的位置  下面回到这个题 姿势一：将webshell 文件的后缀名改为图片类型 ，再利用 bs 抓包 修改文件后缀\n姿势二：直接上传 webshell 文件 ，利用 bs 修改 Content-type ：为 image/gif 绕过\nPASS-03 解题思路：黑名单验证，特殊后缀 这里贴一下源码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array('.asp','.aspx','.php','.jsp'); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //收尾去空 if(!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\u0026quot;YmdHis\u0026quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file,$img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '不允许上传.asp,.aspx,.php,.jsp后缀文件！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  部分代码解释：\n(1)trim() //函数移除字符串两侧的空白字符或其他预定义字符。 相关函数： ltrim() - 移除字符串左侧的空白字符或其他预定义字符 rtrim() - 移除字符串右侧的空白字符或其他预定义字符 详情:https://www.w3school.com.cn/php/func_string_trim.asp (2)deldot($file_name);//删除文件名末尾的点 (3)strrchr() // 函数查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符。 实例: \u0026lt;?php //搜索 \u0026quot;What\u0026quot; 在字符串中的位置，并返回从该位置到字符串结尾的所有字符 echo strrchr(\u0026quot;Hello world! What a beautiful day!\u0026quot;,What); ?\u0026gt; 输出:What a beautiful day! 详情:https://www.w3school.com.cn/php/func_string_strrchr.asp (4)strtolower() // 函数把字符串转换为小写。 (5)str_ireplace() //函数替换字符串中的一些字符（不区分大小写）。 该函数必须遵循下列规则： 如果搜索的字符串是一个数组，那么它将返回一个数组。 如果搜索的字符串是一个数组，那么它将对数组中的每个元素进行查找和替换。 如果同时需要对数组进行查找和替换，并且需要执行替换的元素少于查找到的元素的数量，那么多余元素将用空字符串进行替换 如果是对一个数组进行查找，但只对一个字符串进行替换，那么替代字符串将对所有查找到的值起作用。 注释：该函数不区分大小写。请使用 str_replace() 函数来执行区分大小写的搜索。 注释：该函数是二进制安全的。 语法:str_ireplace(find,replace,string,count) -------------------------------------------- |find |必需。规定要查找的值。 | -------------------------------------------- |replace |必需。规定替换 find 中的值的值。| -------------------------------------------- |string |必需。规定被搜索的字符串。 | -------------------------------------------- |count |可选。一个变量，对替换数进行计数 | --------------------------------------------  源码分析：\n  黑名单不全，想使用大小写、‘.’号（如：1.php.）、特殊字符（如：1.php::$DATA）、Apache文件后缀解析（1.php.xxx为1.php）等方式绕过，但查看源码后，发现都给过滤掉了。 解题姿势一： 使用一些特殊的后缀：\n  php：php3、php4、phtml\n  jsp：jspx、jspf\n  asp：asa、cer\n  使用特殊后缀之后，发现还是不行，返回结果为空，测试\u0026lt;?php phpinfo();?\u0026gt;也读不出来。看wp和百度后，是由于环境是phpstudy搭建的，里面把后缀给限制了，所以改一下httpd.conf文件里的#AddType application/x-httpd-php .php .phtml为AddType application/x-httpd-php .php .phtml .php3 .php4 ==记得去掉#号。==\n但是：我是用V8.0的phpstudy,发现 httpd.conf 文件里居然没有上述代码，通过查资料发现，找到这些代码 在 \u0026lt;/IfMndule\u0026gt;上面添加以下代码AddType application/x-httpd-php .php .phtml .php3\n  ==但是== 是我想的太简单了，加上依旧无法解析php3，查了一下apache的版本号是==2.4.39==，我又用phpstudy2018尝试了一下Apache的版本号是==2.4.23==（由于2018版没有直接写出版本号，可以执行cmd命令行查看 切到phpstudy/apache/bin 目录。执行httpd -v可查看版本号），旧版本就会出现#AddType application/x-httpd-php .php .phtml这些代码，具体原因目前还不知道\u0026hellip;就先使用2018版\n回到题目 这里我们试一下php3，将webshell的后缀改成.php3，上传成功后复制上传地址，蚁剑连接\n解题姿势二： 上传图片马，然后BP拦截，修改后缀为phtml,php3,php4,php5,pht\n蚁剑连接\n解题姿势三：(.htaccess绕过)\n这个有好多坑好多坑好多坑\n首先，我一开始用的是phpstudy V8.0搭建的，然后发现即使按照百度上的方法，即：\n Apache要使.htaccess文件生效要在httpd.config 配置两个地方(百度搜的)\nOptions FollowSymLinks\nAllowOverride None\n改为：\nOptions FollowSymLinks AllowOverride All\n把LoadModule rewrite_module modules/mod_rewrite.so前面的注释符号#删除\n 依旧还是不行，试了好久好久\u0026hellip; 终于！！！找到了这个大佬的博客 链接.\n里面详尽的讲了为什么新版不行，所以我换了phpstudy 2018版\n但是，这个题好像无法使用.htaccess绕过，为什么呢？因为通过查资料发现，使用.htaccess绕过来讲其他后缀解析为php是需要没有前缀的，只需要.htaccess这个文件（也就是.前面是没有任何东西的）\n但是这道题的有一行代码是这样的\n$img_path = UPLOAD_PATH.'/'.date(\u0026quot;YmdHis\u0026quot;).rand(1000,9999).$file_ext;  这里会通过上传日期来命名上传文件的，也就是得到的是个xxx.htaccess文件，这样的话就无法解析其他后缀为php了\nPASS-04 这里先贴一下代码\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;.php\u0026quot;,\u0026quot;.php5\u0026quot;,\u0026quot;.php4\u0026quot;,\u0026quot;.php3\u0026quot;,\u0026quot;.php2\u0026quot;,\u0026quot;.php1\u0026quot;,\u0026quot;.html\u0026quot;,\u0026quot;.htm\u0026quot;,\u0026quot;.phtml\u0026quot;,\u0026quot;.pht\u0026quot;,\u0026quot;.pHp\u0026quot;,\u0026quot;.pHp5\u0026quot;,\u0026quot;.pHp4\u0026quot;,\u0026quot;.pHp3\u0026quot;,\u0026quot;.pHp2\u0026quot;,\u0026quot;.pHp1\u0026quot;,\u0026quot;.Html\u0026quot;,\u0026quot;.Htm\u0026quot;,\u0026quot;.pHtml\u0026quot;,\u0026quot;.jsp\u0026quot;,\u0026quot;.jspa\u0026quot;,\u0026quot;.jspx\u0026quot;,\u0026quot;.jsw\u0026quot;,\u0026quot;.jsv\u0026quot;,\u0026quot;.jspf\u0026quot;,\u0026quot;.jtml\u0026quot;,\u0026quot;.jSp\u0026quot;,\u0026quot;.jSpx\u0026quot;,\u0026quot;.jSpa\u0026quot;,\u0026quot;.jSw\u0026quot;,\u0026quot;.jSv\u0026quot;,\u0026quot;.jSpf\u0026quot;,\u0026quot;.jHtml\u0026quot;,\u0026quot;.asp\u0026quot;,\u0026quot;.aspx\u0026quot;,\u0026quot;.asa\u0026quot;,\u0026quot;.asax\u0026quot;,\u0026quot;.ascx\u0026quot;,\u0026quot;.ashx\u0026quot;,\u0026quot;.asmx\u0026quot;,\u0026quot;.cer\u0026quot;,\u0026quot;.aSp\u0026quot;,\u0026quot;.aSpx\u0026quot;,\u0026quot;.aSa\u0026quot;,\u0026quot;.aSax\u0026quot;,\u0026quot;.aScx\u0026quot;,\u0026quot;.aShx\u0026quot;,\u0026quot;.aSmx\u0026quot;,\u0026quot;.cEr\u0026quot;,\u0026quot;.sWf\u0026quot;,\u0026quot;.swf\u0026quot;,\u0026quot;.ini\u0026quot;); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //收尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件不允许上传!'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  代码和PASS-03差距不大，就不做过多解释\n解题思路：黑名单验证，.htaccess绕过，相比于PASS-03，黑名单更加多了，使用.htaccess绕过\n Apache要使.htaccess文件生效要在httpd.config 配置两个地方(百度搜的)\nOptions FollowSymLinks\nAllowOverride None\n改为：\nOptions FollowSymLinks AllowOverride All\n把LoadModule rewrite_module modules/mod_rewrite.so前面的注释符号#删除\n 解题姿势一： 先上传一个.htaccess文件，内容如下：\nSetHandler application/x-httpd-php \n这样所有文件都会当成php来解析\n然后再上传一个图片马，复制地址，蚁剑连接\n解题姿势二： 后缀修改为：点+空+点 上传图片马，BP抓包，然后将图片马后缀 .png 改为 .php +点+空+点\nPASS-05 贴一下代码\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;.php\u0026quot;,\u0026quot;.php5\u0026quot;,\u0026quot;.php4\u0026quot;,\u0026quot;.php3\u0026quot;,\u0026quot;.php2\u0026quot;,\u0026quot;.html\u0026quot;,\u0026quot;.htm\u0026quot;,\u0026quot;.phtml\u0026quot;,\u0026quot;.pht\u0026quot;,\u0026quot;.pHp\u0026quot;,\u0026quot;.pHp5\u0026quot;,\u0026quot;.pHp4\u0026quot;,\u0026quot;.pHp3\u0026quot;,\u0026quot;.pHp2\u0026quot;,\u0026quot;.Html\u0026quot;,\u0026quot;.Htm\u0026quot;,\u0026quot;.pHtml\u0026quot;,\u0026quot;.jsp\u0026quot;,\u0026quot;.jspa\u0026quot;,\u0026quot;.jspx\u0026quot;,\u0026quot;.jsw\u0026quot;,\u0026quot;.jsv\u0026quot;,\u0026quot;.jspf\u0026quot;,\u0026quot;.jtml\u0026quot;,\u0026quot;.jSp\u0026quot;,\u0026quot;.jSpx\u0026quot;,\u0026quot;.jSpa\u0026quot;,\u0026quot;.jSw\u0026quot;,\u0026quot;.jSv\u0026quot;,\u0026quot;.jSpf\u0026quot;,\u0026quot;.jHtml\u0026quot;,\u0026quot;.asp\u0026quot;,\u0026quot;.aspx\u0026quot;,\u0026quot;.asa\u0026quot;,\u0026quot;.asax\u0026quot;,\u0026quot;.ascx\u0026quot;,\u0026quot;.ashx\u0026quot;,\u0026quot;.asmx\u0026quot;,\u0026quot;.cer\u0026quot;,\u0026quot;.aSp\u0026quot;,\u0026quot;.aSpx\u0026quot;,\u0026quot;.aSa\u0026quot;,\u0026quot;.aSax\u0026quot;,\u0026quot;.aScx\u0026quot;,\u0026quot;.aShx\u0026quot;,\u0026quot;.aSmx\u0026quot;,\u0026quot;.cEr\u0026quot;,\u0026quot;.sWf\u0026quot;,\u0026quot;.swf\u0026quot;,\u0026quot;.htaccess\u0026quot;); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  代码也和上一关差不多，不做解释了\n解题思路：黑名单验证，.user.ini.\n  与前两关相似，再过滤了.htaccess，但是还有个ini配置文件可以利用。\n  先上传一个以auto_prepend_file=1.png为内容的.user.ini文件，然后再上传一个内容为php的一句话的脚本，命名为1.png，.user.ini文件里的意思是：==所有的php文件都自动包含1.png文件。.user.ini相当于一个用户自定义的php.ini。==\n  提示是：存在readme.php这个文件。  复制图像地址后，将文件名改为==readme.php==，然后密码设置为一句话的密码，蚁剑连接成功。\n  注：这里php版本要高一些才能使用 然后蚁剑连接，成功\nPASS-06 贴一下代码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;.php\u0026quot;,\u0026quot;.php5\u0026quot;,\u0026quot;.php4\u0026quot;,\u0026quot;.php3\u0026quot;,\u0026quot;.php2\u0026quot;,\u0026quot;.html\u0026quot;,\u0026quot;.htm\u0026quot;,\u0026quot;.phtml\u0026quot;,\u0026quot;.pht\u0026quot;,\u0026quot;.pHp\u0026quot;,\u0026quot;.pHp5\u0026quot;,\u0026quot;.pHp4\u0026quot;,\u0026quot;.pHp3\u0026quot;,\u0026quot;.pHp2\u0026quot;,\u0026quot;.Html\u0026quot;,\u0026quot;.Htm\u0026quot;,\u0026quot;.pHtml\u0026quot;,\u0026quot;.jsp\u0026quot;,\u0026quot;.jspa\u0026quot;,\u0026quot;.jspx\u0026quot;,\u0026quot;.jsw\u0026quot;,\u0026quot;.jsv\u0026quot;,\u0026quot;.jspf\u0026quot;,\u0026quot;.jtml\u0026quot;,\u0026quot;.jSp\u0026quot;,\u0026quot;.jSpx\u0026quot;,\u0026quot;.jSpa\u0026quot;,\u0026quot;.jSw\u0026quot;,\u0026quot;.jSv\u0026quot;,\u0026quot;.jSpf\u0026quot;,\u0026quot;.jHtml\u0026quot;,\u0026quot;.asp\u0026quot;,\u0026quot;.aspx\u0026quot;,\u0026quot;.asa\u0026quot;,\u0026quot;.asax\u0026quot;,\u0026quot;.ascx\u0026quot;,\u0026quot;.ashx\u0026quot;,\u0026quot;.asmx\u0026quot;,\u0026quot;.cer\u0026quot;,\u0026quot;.aSp\u0026quot;,\u0026quot;.aSpx\u0026quot;,\u0026quot;.aSa\u0026quot;,\u0026quot;.aSax\u0026quot;,\u0026quot;.aScx\u0026quot;,\u0026quot;.aShx\u0026quot;,\u0026quot;.aSmx\u0026quot;,\u0026quot;.cEr\u0026quot;,\u0026quot;.sWf\u0026quot;,\u0026quot;.swf\u0026quot;,\u0026quot;.htaccess\u0026quot;,\u0026quot;.ini\u0026quot;); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\u0026quot;YmdHis\u0026quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  这里代码和上面是一个类型的 解题思路：大小写绕过\n由以上代码可知，源码中没有==对后缀名进行统一转换为大小写==，所以在本关中，在BP拦截后，将图片马后缀名改为 Php（这么依情况而定，不段的按照图片后缀名大小写去尝试即可 ）\nPASS-07 贴一下代码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;.php\u0026quot;,\u0026quot;.php5\u0026quot;,\u0026quot;.php4\u0026quot;,\u0026quot;.php3\u0026quot;,\u0026quot;.php2\u0026quot;,\u0026quot;.html\u0026quot;,\u0026quot;.htm\u0026quot;,\u0026quot;.phtml\u0026quot;,\u0026quot;.pht\u0026quot;,\u0026quot;.pHp\u0026quot;,\u0026quot;.pHp5\u0026quot;,\u0026quot;.pHp4\u0026quot;,\u0026quot;.pHp3\u0026quot;,\u0026quot;.pHp2\u0026quot;,\u0026quot;.Html\u0026quot;,\u0026quot;.Htm\u0026quot;,\u0026quot;.pHtml\u0026quot;,\u0026quot;.jsp\u0026quot;,\u0026quot;.jspa\u0026quot;,\u0026quot;.jspx\u0026quot;,\u0026quot;.jsw\u0026quot;,\u0026quot;.jsv\u0026quot;,\u0026quot;.jspf\u0026quot;,\u0026quot;.jtml\u0026quot;,\u0026quot;.jSp\u0026quot;,\u0026quot;.jSpx\u0026quot;,\u0026quot;.jSpa\u0026quot;,\u0026quot;.jSw\u0026quot;,\u0026quot;.jSv\u0026quot;,\u0026quot;.jSpf\u0026quot;,\u0026quot;.jHtml\u0026quot;,\u0026quot;.asp\u0026quot;,\u0026quot;.aspx\u0026quot;,\u0026quot;.asa\u0026quot;,\u0026quot;.asax\u0026quot;,\u0026quot;.ascx\u0026quot;,\u0026quot;.ashx\u0026quot;,\u0026quot;.asmx\u0026quot;,\u0026quot;.cer\u0026quot;,\u0026quot;.aSp\u0026quot;,\u0026quot;.aSpx\u0026quot;,\u0026quot;.aSa\u0026quot;,\u0026quot;.aSax\u0026quot;,\u0026quot;.aScx\u0026quot;,\u0026quot;.aShx\u0026quot;,\u0026quot;.aSmx\u0026quot;,\u0026quot;.cEr\u0026quot;,\u0026quot;.sWf\u0026quot;,\u0026quot;.swf\u0026quot;,\u0026quot;.htaccess\u0026quot;,\u0026quot;.ini\u0026quot;); $file_name = $_FILES['upload_file']['name']; $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\u0026quot;YmdHis\u0026quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file,$img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件不允许上传'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  解题思路：由源码可知，图片并没有对后缀进行去空处理，所以需要利用BP进行加空。 如下图，图片后缀为php+空格\nPASS-08 贴一下源码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;.php\u0026quot;,\u0026quot;.php5\u0026quot;,\u0026quot;.php4\u0026quot;,\u0026quot;.php3\u0026quot;,\u0026quot;.php2\u0026quot;,\u0026quot;.html\u0026quot;,\u0026quot;.htm\u0026quot;,\u0026quot;.phtml\u0026quot;,\u0026quot;.pht\u0026quot;,\u0026quot;.pHp\u0026quot;,\u0026quot;.pHp5\u0026quot;,\u0026quot;.pHp4\u0026quot;,\u0026quot;.pHp3\u0026quot;,\u0026quot;.pHp2\u0026quot;,\u0026quot;.Html\u0026quot;,\u0026quot;.Htm\u0026quot;,\u0026quot;.pHtml\u0026quot;,\u0026quot;.jsp\u0026quot;,\u0026quot;.jspa\u0026quot;,\u0026quot;.jspx\u0026quot;,\u0026quot;.jsw\u0026quot;,\u0026quot;.jsv\u0026quot;,\u0026quot;.jspf\u0026quot;,\u0026quot;.jtml\u0026quot;,\u0026quot;.jSp\u0026quot;,\u0026quot;.jSpx\u0026quot;,\u0026quot;.jSpa\u0026quot;,\u0026quot;.jSw\u0026quot;,\u0026quot;.jSv\u0026quot;,\u0026quot;.jSpf\u0026quot;,\u0026quot;.jHtml\u0026quot;,\u0026quot;.asp\u0026quot;,\u0026quot;.aspx\u0026quot;,\u0026quot;.asa\u0026quot;,\u0026quot;.asax\u0026quot;,\u0026quot;.ascx\u0026quot;,\u0026quot;.ashx\u0026quot;,\u0026quot;.asmx\u0026quot;,\u0026quot;.cer\u0026quot;,\u0026quot;.aSp\u0026quot;,\u0026quot;.aSpx\u0026quot;,\u0026quot;.aSa\u0026quot;,\u0026quot;.aSax\u0026quot;,\u0026quot;.aScx\u0026quot;,\u0026quot;.aShx\u0026quot;,\u0026quot;.aSmx\u0026quot;,\u0026quot;.cEr\u0026quot;,\u0026quot;.sWf\u0026quot;,\u0026quot;.swf\u0026quot;,\u0026quot;.htaccess\u0026quot;,\u0026quot;.ini\u0026quot;); $file_name = trim($_FILES['upload_file']['name']); $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  解题思路： 解题姿势一：\n加点绕过，由源码可知，图片做了==去空==处理，但是没有做==去点==处理，所以可以加点绕过。 如下图，图片后缀为php+点 或者php+点+空+点\n解题姿势二\n利用Windows解析漏洞（后缀修改为1.php:1.jpg）\n上传成功后\u0026hellip;里面的代码没了\u0026hellip;不知道为什么\u0026hellip;\nPASS-09 贴一下代码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;.php\u0026quot;,\u0026quot;.php5\u0026quot;,\u0026quot;.php4\u0026quot;,\u0026quot;.php3\u0026quot;,\u0026quot;.php2\u0026quot;,\u0026quot;.html\u0026quot;,\u0026quot;.htm\u0026quot;,\u0026quot;.phtml\u0026quot;,\u0026quot;.pht\u0026quot;,\u0026quot;.pHp\u0026quot;,\u0026quot;.pHp5\u0026quot;,\u0026quot;.pHp4\u0026quot;,\u0026quot;.pHp3\u0026quot;,\u0026quot;.pHp2\u0026quot;,\u0026quot;.Html\u0026quot;,\u0026quot;.Htm\u0026quot;,\u0026quot;.pHtml\u0026quot;,\u0026quot;.jsp\u0026quot;,\u0026quot;.jspa\u0026quot;,\u0026quot;.jspx\u0026quot;,\u0026quot;.jsw\u0026quot;,\u0026quot;.jsv\u0026quot;,\u0026quot;.jspf\u0026quot;,\u0026quot;.jtml\u0026quot;,\u0026quot;.jSp\u0026quot;,\u0026quot;.jSpx\u0026quot;,\u0026quot;.jSpa\u0026quot;,\u0026quot;.jSw\u0026quot;,\u0026quot;.jSv\u0026quot;,\u0026quot;.jSpf\u0026quot;,\u0026quot;.jHtml\u0026quot;,\u0026quot;.asp\u0026quot;,\u0026quot;.aspx\u0026quot;,\u0026quot;.asa\u0026quot;,\u0026quot;.asax\u0026quot;,\u0026quot;.ascx\u0026quot;,\u0026quot;.ashx\u0026quot;,\u0026quot;.asmx\u0026quot;,\u0026quot;.cer\u0026quot;,\u0026quot;.aSp\u0026quot;,\u0026quot;.aSpx\u0026quot;,\u0026quot;.aSa\u0026quot;,\u0026quot;.aSax\u0026quot;,\u0026quot;.aScx\u0026quot;,\u0026quot;.aShx\u0026quot;,\u0026quot;.aSmx\u0026quot;,\u0026quot;.cEr\u0026quot;,\u0026quot;.sWf\u0026quot;,\u0026quot;.swf\u0026quot;,\u0026quot;.htaccess\u0026quot;,\u0026quot;.ini\u0026quot;); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\u0026quot;YmdHis\u0026quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  解题思路：\n由上可知，文件没有对后缀名进行去“::$DATA\u0026quot;， php 在 window 的时候如果文件名 + \u0026ldquo;::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持“::$DATA\u0026quot;之前的文件名 他的目的就是不检查后缀名。\nps:==只能是Windows系统，并且只能时php文件==\nPASS-10 贴一下代码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;.php\u0026quot;,\u0026quot;.php5\u0026quot;,\u0026quot;.php4\u0026quot;,\u0026quot;.php3\u0026quot;,\u0026quot;.php2\u0026quot;,\u0026quot;.html\u0026quot;,\u0026quot;.htm\u0026quot;,\u0026quot;.phtml\u0026quot;,\u0026quot;.pht\u0026quot;,\u0026quot;.pHp\u0026quot;,\u0026quot;.pHp5\u0026quot;,\u0026quot;.pHp4\u0026quot;,\u0026quot;.pHp3\u0026quot;,\u0026quot;.pHp2\u0026quot;,\u0026quot;.Html\u0026quot;,\u0026quot;.Htm\u0026quot;,\u0026quot;.pHtml\u0026quot;,\u0026quot;.jsp\u0026quot;,\u0026quot;.jspa\u0026quot;,\u0026quot;.jspx\u0026quot;,\u0026quot;.jsw\u0026quot;,\u0026quot;.jsv\u0026quot;,\u0026quot;.jspf\u0026quot;,\u0026quot;.jtml\u0026quot;,\u0026quot;.jSp\u0026quot;,\u0026quot;.jSpx\u0026quot;,\u0026quot;.jSpa\u0026quot;,\u0026quot;.jSw\u0026quot;,\u0026quot;.jSv\u0026quot;,\u0026quot;.jSpf\u0026quot;,\u0026quot;.jHtml\u0026quot;,\u0026quot;.asp\u0026quot;,\u0026quot;.aspx\u0026quot;,\u0026quot;.asa\u0026quot;,\u0026quot;.asax\u0026quot;,\u0026quot;.ascx\u0026quot;,\u0026quot;.ashx\u0026quot;,\u0026quot;.asmx\u0026quot;,\u0026quot;.cer\u0026quot;,\u0026quot;.aSp\u0026quot;,\u0026quot;.aSpx\u0026quot;,\u0026quot;.aSa\u0026quot;,\u0026quot;.aSax\u0026quot;,\u0026quot;.aScx\u0026quot;,\u0026quot;.aShx\u0026quot;,\u0026quot;.aSmx\u0026quot;,\u0026quot;.cEr\u0026quot;,\u0026quot;.sWf\u0026quot;,\u0026quot;.swf\u0026quot;,\u0026quot;.htaccess\u0026quot;,\u0026quot;.ini\u0026quot;); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  解题思路： ==将filename拼接路径会带来极大风险==，由$img_path = UPLOAD_PATH.'/'.$file_name;可知，该关进行的是现在文件末尾先去点，再去空便没有再做任何处理，因此我们可以利用这个漏洞，上传图片马，然后用BP,构造后缀名为php+点+空+点\nPASS-11 贴一下代码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;php\u0026quot;,\u0026quot;php5\u0026quot;,\u0026quot;php4\u0026quot;,\u0026quot;php3\u0026quot;,\u0026quot;php2\u0026quot;,\u0026quot;html\u0026quot;,\u0026quot;htm\u0026quot;,\u0026quot;phtml\u0026quot;,\u0026quot;pht\u0026quot;,\u0026quot;jsp\u0026quot;,\u0026quot;jspa\u0026quot;,\u0026quot;jspx\u0026quot;,\u0026quot;jsw\u0026quot;,\u0026quot;jsv\u0026quot;,\u0026quot;jspf\u0026quot;,\u0026quot;jtml\u0026quot;,\u0026quot;asp\u0026quot;,\u0026quot;aspx\u0026quot;,\u0026quot;asa\u0026quot;,\u0026quot;asax\u0026quot;,\u0026quot;ascx\u0026quot;,\u0026quot;ashx\u0026quot;,\u0026quot;asmx\u0026quot;,\u0026quot;cer\u0026quot;,\u0026quot;swf\u0026quot;,\u0026quot;htaccess\u0026quot;,\u0026quot;ini\u0026quot;); $file_name = trim($_FILES['upload_file']['name']); $file_name = str_ireplace($deny_ext,\u0026quot;\u0026quot;, $file_name); $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  解题思路：\nstr_ireplace函数：替换上述文件后缀名为空，但是他只是进行了一次替换，没有多次，所以我们可以通过双写进行绕过 （对大小写不敏感）\nPass12-13:将filename加入最终路径会带来极大风险 get和post方法提交：\n  get请求: 请求的数据会附加在url之后并且以？分隔url和传输的数据，多个参数之间用\u0026amp;连接， 会在URI中暴露出来 ；\n  post请求： 把提交的数据放置在http包的包体中，以二进制流的方式进行传送，不会对%00等进行自动解码，并 不会暴露出来。\n  最后才发现原来，get和post方法在页面html源码上可以找到，并且可以发现get和post传递的相应参数（例如下面的 $save_path和 $save_name），及参数规定的值。\n  Pass-12 贴下代码：\n$is_upload = false; $msg = null; if(isset($_POST['submit'])){ $ext_arr = array('jpg','png','gif'); $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\u0026quot;.\u0026quot;)+1); if(in_array($file_ext,$ext_arr)){ $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = $_GET['save_path'].\u0026quot;/\u0026quot;.rand(10, 99).date(\u0026quot;YmdHis\u0026quot;).\u0026quot;.\u0026quot;.$file_ext; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = '上传出错！'; } } else{ $msg = \u0026quot;只允许上传.jpg|.png|.gif类型文件！\u0026quot;; } }  源码分析：\n$ext_arr = array('jpg','png','gif');//发现是白名单 $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\u0026quot;.\u0026quot;)+1); if(in_array($file_ext,$ext_arr)){ //储存在服务器目录的文件名称 $temp_file = $_FILES['upload_file']['tmp_name']; //随机生成文件的名称 $img_path = $_GET['save_path'].\u0026quot;/\u0026quot;.rand(10, 99).date(\u0026quot;YmdHis\u0026quot;).\u0026quot;.\u0026quot;.$file_ext; //函数将文件与后缀名直接进行拼接 if(move_uploaded_file($temp_file,$img_path)){  函数： substr()函数：返回字符串的一部分\n从字符串中返回 \u0026quot;world\u0026quot;： \u0026lt;?php echo substr(\u0026quot;Hello world\u0026quot;,6); ?\u0026gt; //输出world  strrpos() 函数：查找字符串在另一字符串中最后一次出现的位置。 注释：strrpos() 函数对大小写敏感。\n查找 \u0026quot;php\u0026quot; 在字符串中最后一次出现的位置： \u0026lt;?php echo strrpos(\u0026quot;You love php, I love php too!\u0026quot;,\u0026quot;php\u0026quot;); ?\u0026gt;//输出21  解题思路：\nURI中00截断\n由源码可得，在这边他直接将后缀名 $file_ext $进行拼接。如果中途在其中加入php后缀，再利用00进行截断，那么便可以将该文件当作php文件进行解析。再者又有 $_GET[‘save_path’]，这表示他需要请求 参数save_path，使用GET方法，即我们可以在拦下包的时候 在URI中发现参数 save_path，我们便可以拦下包将save_path 换掉。\n解题姿势一：\n拦包00截断\n截断条件：\n==截断条件：php版本小于5.3.4，php的magic_quotes_gpc为OFF状态==\n由源码可知，图片的save_path通过get传递，然后和后缀ima_path直接拼接而成的，所以我们可以直接使用 %00 截断，将后缀名 .jpg 截断，从而以 php 运行。\n解题姿势二：\n前端直接修改为 \u0026ldquo;php+00截断\u0026quot;格式 如下可得，直接将参数save_path修改为php+00截断的格式，因此它会将之后上传的所有文件以PHP的格式进行解析。\n上传图片马，复制图片地址，直接蚁剑1.php即可\n附个图片的地址：http://localhost/upload-labs-master/upload/1.php%EF%BF%BD/6320200921235947.png 把php后面的删掉连接\nPASS-13 贴一下代码：\n$is_upload = false; $msg = null; if(isset($_POST['submit'])){ $ext_arr = array('jpg','png','gif'); $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\u0026quot;.\u0026quot;)+1); if(in_array($file_ext,$ext_arr)){ $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = $_POST['save_path'].\u0026quot;/\u0026quot;.rand(10, 99).date(\u0026quot;YmdHis\u0026quot;).\u0026quot;.\u0026quot;.$file_ext; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = \u0026quot;上传失败\u0026quot;; } } else { $msg = \u0026quot;只允许上传.jpg|.png|.gif类型文件！\u0026quot;; } }  源码分析：\n由源码可知，直接将 $file_ext 拼接在路径中，因此我们可以在中间时将php加在 $file_ext 中，从而以PHP文件解析。再由 $_POST[‘save_path’]请求可知， 参数save_path 虽然不会出现在URI中，但是我们可以在包里面发现他，因此我们可以在包里面对 $file_ext 中进行更改。但是POST是以二进制流进行发送文件，因此我们需要在封包的 二进制文件 中对 $file_ext添加php和对应的 00截断 。\n解题思路：\nPOST请求，二进制文件中00截断\n解题姿势：\n上传图片马后为如下: 然后在上面的upload 的后面加上 XXX.php+（这里的XXX可以为任何名字，他只是一个代号。并且 php后面的 + 好也是一个标记，他的二进制代码为 2b） 由上可知，将二进制中的 + 改为 00 截断，即将 + 的二进制码 2b 改为 00 .\n上传成功 注：这里蚁剑连接1.php即后面的被截断了\nPASS-14 贴一下代码:\nfunction getReailFileType($filename){ $file = fopen($filename, \u0026quot;rb\u0026quot;); $bin = fread($file, 2); //只读2字节 fclose($file); $strInfo = @unpack(\u0026quot;C2chars\u0026quot;, $bin); $typeCode = intval($strInfo['chars1'].$strInfo['chars2']); $fileType = ''; switch($typeCode){ case 255216: $fileType = 'jpg'; break; case 13780: $fileType = 'png'; break; case 7173: $fileType = 'gif'; break; default: $fileType = 'unknown'; } return $fileType; } $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $temp_file = $_FILES['upload_file']['tmp_name']; $file_type = getReailFileType($temp_file); if($file_type == 'unknown'){ $msg = \u0026quot;文件未知，上传失败！\u0026quot;; }else{ $img_path = UPLOAD_PATH.\u0026quot;/\u0026quot;.rand(10, 99).date(\u0026quot;YmdHis\u0026quot;).\u0026quot;.\u0026quot;.$file_type; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = \u0026quot;上传出错！\u0026quot;; } } }  函数解释：\n(1) fopen() 函数打开文件或者 URL。 如果打开失败，本函数返回 FALSE。 语法：fopen(filename,mode,include_path,context) ---------------------------------------------------- |filename |必需。规定要打开的文件或 URL。 | ---------------------------------------------------- |mode |必需。规定要求到该文件/流的访问类型。 | ---------------------------------------------------- |include_path |可选。如果也需要在 include_path 中检索 | | |文件的话，可以将该参数设为 1 或 TRUE。 | ---------------------------------------------------- |context |可选。规定文件句柄的环境。Context 是可以| | |修改流的行为的一套选项 | ---------------------------------------------------- (2) fread() 函数读取文件（可安全用于二进制文件）。 语法:fread(file,length) ------------------------------------ |file |必需。规定要读取打开文件。 | ------------------------------------ |length |必需。规定要读取的最大字节数. | ------------------------------------ (3) fclose() 函数关闭一个打开文件。 语法:fclose(file) file | 必需。规定要关闭的文件。  代码分析:\nfunction getReailFileType($filename){ $file = fopen($filename, \u0026quot;rb\u0026quot;); //rb是读取二进制文件。r表示read,即读取;b表示binary，即二进制。 $bin = fread($file, 2); //只读2字节 /*表示只是对文件头做了一个检测*/ fclose($file); $strInfo = @unpack(\u0026quot;C2chars\u0026quot;, $bin); //标识前两个字符按照，c格式，数组索引charsl、chars2 $typeCode = intval($strInfo['chars1'].$strInfo['chars2']); $fileType = ''; //意思是：读取上传文件的前两个字节内容，unpack解码后，使用intval转换为10进制，默认为10进制，根据转换后的结果判断图片类型。  解题姿势: 1、制作图片马，在cmd中输入copy 1.jpg/b + 1.php/a 111.jpg，2.jpg就是生成的图片马。\n注:==要在1.jpg和1.php的目录下运行命令==\n2、上传成功后，jpg文件不能直接解析为php文件，这里需要利用文件包含解析图片马里的php脚本，file为我们的图片马位置\nPASS-15 贴一下代码：\nfunction isImage($filename){ $types = '.jpeg|.png|.gif'; if(file_exists($filename)){ $info = getimagesize($filename); $ext = image_type_to_extension($info[2]); if(stripos($types,$ext)\u0026gt;=0){ return $ext; }else{ return false; } }else{ return false; } } $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $temp_file = $_FILES['upload_file']['tmp_name']; $res = isImage($temp_file); if(!$res){ $msg = \u0026quot;文件未知，上传失败！\u0026quot;; }else{ $img_path = UPLOAD_PATH.\u0026quot;/\u0026quot;.rand(10, 99).date(\u0026quot;YmdHis\u0026quot;).$res; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = \u0026quot;上传出错！\u0026quot;; } } }  函数解释：\nstripos() 函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）。 语法： stripos(string,find,start) ----------------------------------------- |string|必需。规定要搜索的字符串。 | ----------------------------------------- |find |必需。规定要查找的字符。 | ----------------------------------------- |start |可选。规定开始搜索的位置。 | -----------------------------------------  代码分析：\n$info = getimagesize($filename); $ext = image_type_to_extension($info[2]); // getimagesize通过检查图像文件的大小并返回图像的尺寸以及文件类型. // image_type_to_extension根据指定的图像类型返回对应的后缀名.  解题思路：\n（图片马 之 使用getimagesize()检查是否为图片文件）\n利用方式同PASS-14\n蚁剑链接成功\nPASS-16 贴一下源码：\nfunction isImage($filename){ //需要开启php_exif模块 $image_type = exif_imagetype($filename); switch ($image_type) { case IMAGETYPE_GIF: return \u0026quot;gif\u0026quot;; break; case IMAGETYPE_JPEG: return \u0026quot;jpg\u0026quot;; break; case IMAGETYPE_PNG: return \u0026quot;png\u0026quot;; break; default: return false; break; } } $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $temp_file = $_FILES['upload_file']['tmp_name']; $res = isImage($temp_file); if(!$res){ $msg = \u0026quot;文件未知，上传失败！\u0026quot;; }else{ $img_path = UPLOAD_PATH.\u0026quot;/\u0026quot;.rand(10, 99).date(\u0026quot;YmdHis\u0026quot;).\u0026quot;.\u0026quot;.$res; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = \u0026quot;上传出错！\u0026quot;; } } }  函数分析：\n 与Pass-14思路相同，上传同个图片马就可以。相关函数说明：  exif_imagetype(string $filename)//读取一个图像的第一个字节并检查其签名  注: ==此函数需要开启php_exif模块==\n这里有一个问题：\n仅仅打开这个是不行的，上传图片会出现空白的情况，如下：\n百度一番之后才知道要在php.ini中修改配置。\n在php.ini中搜索extension=php_exif.dll，然后将前面的分号去掉\n保存重启之后就能正常使用了。\n后面利用和PASS-14一样\n蚁剑连接成功\nPASS-17 贴一下代码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])){ // 获得上传文件的基本信息，文件名，类型，大小，临时文件路径 $filename = $_FILES['upload_file']['name']; $filetype = $_FILES['upload_file']['type']; $tmpname = $_FILES['upload_file']['tmp_name']; $target_path=UPLOAD_PATH.'/'.basename($filename); // 获得上传文件的扩展名 $fileext= substr(strrchr($filename,\u0026quot;.\u0026quot;),1); //判断文件后缀与类型，合法才进行上传操作 if(($fileext == \u0026quot;jpg\u0026quot;) \u0026amp;\u0026amp; ($filetype==\u0026quot;image/jpeg\u0026quot;)){ if(move_uploaded_file($tmpname,$target_path)){ //使用上传的图片生成新的图片 $im = imagecreatefromjpeg($target_path); if($im == false){ $msg = \u0026quot;该文件不是jpg格式的图片！\u0026quot;; @unlink($target_path); }else{ //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\u0026quot;.jpg\u0026quot;; //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.'/'.$newfilename; imagejpeg($im,$img_path); @unlink($target_path); $is_upload = true; } } else { $msg = \u0026quot;上传出错！\u0026quot;; } }else if(($fileext == \u0026quot;png\u0026quot;) \u0026amp;\u0026amp; ($filetype==\u0026quot;image/png\u0026quot;)){ if(move_uploaded_file($tmpname,$target_path)){ //使用上传的图片生成新的图片 $im = imagecreatefrompng($target_path); if($im == false){ $msg = \u0026quot;该文件不是png格式的图片！\u0026quot;; @unlink($target_path); }else{ //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\u0026quot;.png\u0026quot;; //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.'/'.$newfilename; imagepng($im,$img_path); @unlink($target_path); $is_upload = true; } } else { $msg = \u0026quot;上传出错！\u0026quot;; } }else if(($fileext == \u0026quot;gif\u0026quot;) \u0026amp;\u0026amp; ($filetype==\u0026quot;image/gif\u0026quot;)){ if(move_uploaded_file($tmpname,$target_path)){ //使用上传的图片生成新的图片 $im = imagecreatefromgif($target_path); if($im == false){ $msg = \u0026quot;该文件不是gif格式的图片！\u0026quot;; @unlink($target_path); }else{ //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\u0026quot;.gif\u0026quot;; //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.'/'.$newfilename; imagegif($im,$img_path); @unlink($target_path); $is_upload = true; } } else { $msg = \u0026quot;上传出错！\u0026quot;; } }else{ $msg = \u0026quot;只允许上传后缀为.jpg|.png|.gif的图片文件！\u0026quot;; } }  函数分析：\n[FILE数组内容](https://www.cnblogs.com/laijinquan/p/8682282.html)（_FILE[“file”][“tmp_name”];其中file为前台上传文件的名称，而tmp_name是包含路径的新的文件名。） $_FILES[‘myFile’][‘name’] 客户端文件的原名称。 $_FILES[‘myFile’][‘type’] 文件的 MIME 类型，需要浏览器提供该信息的支持，例如\u0026quot;image/gif\u0026quot;。 $_FILES[‘myFile’][‘size’] 已上传文件的大小，单位为字节。 $_FILES[‘myFile’][‘tmp_name’] 文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的  代码分析：\nif (isset($_POST['submit'])){ // 获得上传文件的基本信息，文件名，类型，大小，临时文件路径 $filename = $_FILES['upload_file']['name'];/**/获得上传文件名字** $filetype = $_FILES['upload_file']['type'];//**后缀类型** $tmpname = $_FILES['upload_file']['tmp_name'];/**/临时文件名字** $target_path=UPLOAD_PATH.'/'.basename($filename);//**获得临时文件的路径的名字** // 获得上传文件的扩展名 $fileext= substr(strrchr($filename,\u0026quot;.\u0026quot;),1);/**/文件后缀** //判断文件后缀与类型，合法才进行上传操作 if(($fileext == \u0026quot;jpg\u0026quot;) \u0026amp;\u0026amp; ($filetype==\u0026quot;image/jpeg\u0026quot;)){ if(move_uploaded_file($tmpname,$target_path)){**//将临时文件放在路径下面** //使用上传的图片生成新的图片 $im = imagecreatefromjpeg($target_path);//二次**渲染图片，并且检验图片是否为jpg的格式，并且返回ture或者false** if($im == false){ $msg = \u0026quot;该文件不是jpg格式的图片！\u0026quot;; @unlink($target_path);//**根据路径删除临时文件** }else{ //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\u0026quot;.jpg\u0026quot;;//**生成新图片的名字** //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.'/'.$newfilename;//**生成新图片的路径** imagejpeg($im,$img_path);//**将新图片放到该路径下** @unlink($target_path);//**删除临时图片** $is_upload = true; } } else { $msg = \u0026quot;上传出错！\u0026quot;; }  验证过程： 判断后缀与MIME类型是否符合要求，符合后生成新图像（内容不正确会失败，返回false，相当于多了一次验证），生成新图像失败就unlink删除，成功就根据系统时间给文件命名，再通过imagejpeg类似函数使用原图像资源创建新图像（二次渲染）。相关函数说明：\nbasename(string $path [,string $suffix]) //返回路径中的文件名部分 imagecreatefromjpeg(string $filename) imagecreatefrompng(string $filename) imagecreatefromgif(string $filename) //由文件或URL创建一个新图像，内容不对则失败返回false，成功后返回图像资源 srand([int $seed ]) //用seed播下随机数发生器种子 strval(mixed $var) //返回字符串类型的var imagejpeg(resource $image [,string $filename [,int $quality]])//从image图像以filename为文件名创建一个JPEG图像 imagepng(resource $image [,string $filename]) //从 image 图像以filename为文件名创建一个PNG图像或文件 imagegif(resource $image [,string $filename]) //从 image 图像以filename为文件名创建一个GIF图像或文件  解题姿势：\n在相同位置中添加一句话木马后发现，这次没有消失\n利用文件包含漏洞，蚁剑连接\n这里只上传了gif文件，jpg和png有点复杂，暂时还没有弄懂\u0026hellip;\n附个大佬博客链接，有详解：https://xz.aliyun.com/t/2657\nPASS-18 贴一下源码：\n$is_upload = false; $msg = null; if(isset($_POST['submit'])){ $ext_arr = array('jpg','png','gif'); $file_name = $_FILES['upload_file']['name']; $temp_file = $_FILES['upload_file']['tmp_name']; $file_ext = substr($file_name,strrpos($file_name,\u0026quot;.\u0026quot;)+1); $upload_file = UPLOAD_PATH . '/' . $file_name; if(move_uploaded_file($temp_file, $upload_file)){ if(in_array($file_ext,$ext_arr)){ $img_path = UPLOAD_PATH . '/'. rand(10, 99).date(\u0026quot;YmdHis\u0026quot;).\u0026quot;.\u0026quot;.$file_ext; rename($upload_file, $img_path); $is_upload = true; }else{ $msg = \u0026quot;只允许上传.jpg|.png|.gif类型文件！\u0026quot;; unlink($upload_file); } }else{ $msg = '上传出错！'; } }  函数分析： rename() 函数 ：重命名文件或目录。 如果成功，该函数返回 TRUE。如果失败，则返回 FALSE。 rename(oldname,newname,context)\n代码分析：\nif(isset($_POST['submit'])){ $ext_arr = array('jpg','png','gif'); $file_name = $_FILES['upload_file']['name'];//客户端的文件名 $temp_file = $_FILES['upload_file']['tmp_name'];//临时文件名路径名称 $file_ext = substr($file_name,strrpos($file_name,\u0026quot;.\u0026quot;)+1);//截取文件的后缀 $upload_file = UPLOAD_PATH . '/' . $file_name;//拼接生成客户端文件的路径名称 if(move_uploaded_file($temp_file, $upload_file)){//将临时文件放到制定路径中 if(in_array($file_ext,$ext_arr)){//由此可见是白名单，因为只允许 jpg、png、gif 格式上传 $img_path = UPLOAD_PATH . '/'. rand(10, 99).date(\u0026quot;YmdHis\u0026quot;).\u0026quot;.\u0026quot;.$file_ext;//生成新的文件名 rename($upload_file, $img_path);//对文件进行重命名，并将新的文件目录覆盖到原来的文件目录上。 $is_upload = true;  解题思路：\n条件竞争\n条件竞争是指一个系统的运行结果依赖于不受控制的事件的先后顺序。\n当这些不受控制的事件并没有按照开发者想要的方式运行时，就可能会出现 bug。\n尤其在当前我们的系统中大量对资源进行共享，如果处理不当的话，就会产生条件竞争漏洞。\n  如果文件检测是先保存后检测，文件不合法再删除的方式进行的，典型的“引狼入室”。\n  当我们上传web shell文件时，不会先限制php类型文件上传，先利用上面的语句把上传的文件临时存放。再执行下面的if语句进行文件类型的限制和文件名的时间戳。然后执行\n  就可以利用条件竞争的方式在木马文件在被删除之前访问它，使他成功的执行\n  具体的操作过程就是，利用工具，一边不断地快速上传木马文件，一边不断的请求访问上传的木马文件，使一些来不及被删除的木马文件被成功执行\n  if(move_uploaded_file($temp_file, $upload_file))//移动到新文件夹  解题姿势：\n**利用文件重命名过程中有耗费时间的过程。临时webshell文件保存的极短时间，去访问webshell。获取一些信息。\n我们可以利用burp多线程发包，然后不断在浏览器访问我们的webshell，会有一瞬间的访问成功。（即当线程足够的时候 ，将可能会跳过某个步骤，而直接访问到我们的 webshell )\n**系统执行过程为：**当 jpg 图片上传时, 后台先生成图片的临时文件名$ tem_file路径，并且他也会拼接生成一个新的文件名 $ upoad_load路径，然后将临时文件名 $tem_file的路径放到新的文件名$ upoad_load的路径下面。之后对图片进行后缀检验 ，如果为白名单 jpg、png、gif的格式，那么将生成一个新的文件名 $ img_path路径, 并用新的路径名对之前的$ upoad_load的路径名 进行重命名覆盖。 因此，我们可以利用判断白名单时间差，结合多线程不断地对系统发送图片马php文件，当线程足够时，然后我们便能利用这个时间差，即系统没有反应过来时绕过白名单判断，成功向在文件夹中发送图片马php文件）\n不断上传文件，在文件还没被删除前去读取文件，若上传内容为\u0026lt;?php fputs(fopen('2.php','w'),'\u0026lt;?php @eval($_POST[\u0026quot;111\u0026quot;])?\u0026gt;');?\u0026gt;，则还没被删除前去读取文件，解析之后会写入一个内容为\u0026lt;?php @eval($_POST[\u0026quot;111\u0026quot;])?\u0026gt;的2.php文件。使用BurpSuite的Intruder不断上传文件并不断访问所上传的文件。 注：\u0026quot;pass\u0026quot;一定要双引号，不然单引号之间乱了。\n下面上图：\n还是先说一下思路吧：用BP抓一个上传包，再抓一个访问这个上传文件的包，然后用Intruder模块不断访问\n我这里将 webshell 命名为 3.php，然后用BP抓这个上传包\n再抓这个包，不断访问 过程和抓到的上传包一样\nupload文件夹上传成功2.php，蚁剑连接\nPASS-19 贴一下代码，及代码分析\n//index.php $is_upload = false; $msg = null; if (isset($_POST['submit'])) { require_once(\u0026quot;./myupload.php\u0026quot;); $imgFileName =time(); $u = new MyUpload($_FILES['upload_file']['name'], $_FILES['upload_file']['tmp_name'], $_FILES['upload_file']['size'],$imgFileName); //源码隐藏了，其实在这边MyUpload是一个类，这句代码的意思是定义 了MyUpload的类， //名字为 $ u ， $status_code = $u-\u0026gt;upload(UPLOAD_PATH); //这边也隐藏了函数，Upload为一个函数，将会返回以下 switch 里面case相关的值。 switch ($status_code) { case 1://为正常格式 $is_upload = true; $img_path = $u-\u0026gt;cls_upload_dir . $u-\u0026gt;cls_file_rename_to; break; case 2: $msg = '文件已经被上传，但没有重命名。';\tbreak; case -1: $msg = '这个文件不能上传到服务器的临时文件存储目录。';\tbreak; case -2: $msg = '上传失败，上传目录不可写。'; break; case -3: $msg = '上传失败，无法上传该类型文件。';\tbreak; case -4: $msg = '上传失败，上传的文件过大。';\tbreak; case -5: $msg = '上传失败，服务器已经存在相同名称文件。';\tbreak; case -6: $msg = '文件无法上传，文件不能复制到目标目录。';\tbreak; default: $msg = '未知错误！'; break; } } //myupload.php class MyUpload{ ...... var $cls_arr_ext_accepted = array( \u0026quot;.doc\u0026quot;, \u0026quot;.xls\u0026quot;, \u0026quot;.txt\u0026quot;, \u0026quot;.pdf\u0026quot;, \u0026quot;.gif\u0026quot;, \u0026quot;.jpg\u0026quot;, \u0026quot;.zip\u0026quot;, \u0026quot;.rar\u0026quot;, \u0026quot;.7z\u0026quot;,\u0026quot;.ppt\u0026quot;, \u0026quot;.html\u0026quot;, \u0026quot;.xml\u0026quot;, \u0026quot;.tiff\u0026quot;, \u0026quot;.jpeg\u0026quot;, \u0026quot;.png\u0026quot; );//黑名单 ...... /** upload() ** ** Method to upload the file. ** This is the only method to call outside the class. ** @para String name of directory we upload to ** @returns void **/ function upload( $dir ){ $ret = $this-\u0026gt;isUploadedFile();//文件是否成功上传 //$this-\u0026gt;是指向对象的XXX。在这边\u0026gt;isUploadedFile()是指函数是否是以POST形式上传，即能够判断函数是否可以返回成功。 if( $ret != 1 ){ return $this-\u0026gt;resultUpload( $ret ); } //**resultUpload（ $ret）**这个函数将会返回switch中case的相关值，从而确定switch函数的执行。 //它的执行过程为 $ret 作为相关值传递给函数resultUpload（）（里面也是 switch的相关函数， 从而达到返回 switch 中不同case的目的。）从而触发相关属性。 $ret = $this-\u0026gt;setDir( $dir );//文件目录是否成功设置 if( $ret != 1 ){ return $this-\u0026gt;resultUpload( $ret ); } $ret = $this-\u0026gt;checkExtension();//文件扩展名即后缀是否符合条件（黑名单） if( $ret != 1 ){ return $this-\u0026gt;resultUpload( $ret ); } $ret = $this-\u0026gt;checkSize();//文件大小是否符合条件 if( $ret != 1 ){ return $this-\u0026gt;resultUpload( $ret ); } // if flag to check if the file exists is set to 1 if( $this-\u0026gt;cls_file_exists == 1 ){//文件是否存在 $ret = $this-\u0026gt;checkFileExists(); if( $ret != 1 ){ return $this-\u0026gt;resultUpload( $ret ); } } // if we are here, we are ready to move the file to destination $ret = $this-\u0026gt;move();//是否成功复制上传，如果存在相同的文件名将不会成功上传 if( $ret != 1 ){ return $this-\u0026gt;resultUpload( $ret ); } // check if we need to rename the file if( $this-\u0026gt;cls_rename_file == 1 ){ //是否用$im_path成功给$upload_file重命名 $ret = $this-\u0026gt;renameFile(); if( $ret != 1 ){ return $this-\u0026gt;resultUpload( $ret ); } } // if we are here, everything worked as planned :) return $this-\u0026gt;resultUpload( \u0026quot;SUCCESS\u0026quot; ); } ......  百度说这个和18题思路一样，但是我BP传了半天也没发现php文件\u0026hellip;而且，还没上传到upload文件夹下，上传的是upload的上一层文件夹\u0026hellip;不知道什么原因，如果有大佬知道的话可以告诉一下小弟\u0026hellip;谢谢\n这里是利用了一个也算是竞争吧的方法\n通过这个代码\nif( $this-\u0026gt;cls_rename_file == 1 ){ //是否用$im_path成功给$upload_file重命名\n这边和第17关有点类似，都对关键进行了重命名，由于我们是利用burp不断的发送相同的包，那么一旦有两个包同时传到这边是，那么系统对一个重命名时，另一个刚好“逃脱”了，那么上传成功。\n解题姿势：\n在这关是一个白名单，利用了appche的一个解析漏洞，它会将 “ .php.7z ” 当作 .php来解析，而刚好 “ .php.7z ”又属于白名单，所以上传一个 “ .php.7z ” 的文件，然后 再利用条件竞争漏洞进行多线程不断的发送 “ .php.7z”的文件，由于版本问题，这次的文件没有上传到upload的文件夹下面，而是上传到 WWW 的文件夹下面，但是不影响，并且这次的文件上传后就不会被删掉，就会保存在 该文件夹下面，这样的话我们将可以稳定的访问到。\n但是又感觉不是很对，我最后是利用了文件包含漏洞\u0026hellip;但是题目中没有说可利用文件包含漏洞\u0026hellip;我是用文件包含漏洞访问的\nPASS-20 贴一下代码：\n$is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\u0026quot;php\u0026quot;,\u0026quot;php5\u0026quot;,\u0026quot;php4\u0026quot;,\u0026quot;php3\u0026quot;,\u0026quot;php2\u0026quot;,\u0026quot;html\u0026quot;,\u0026quot;htm\u0026quot;,\u0026quot;phtml\u0026quot;,\u0026quot;pht\u0026quot;,\u0026quot;jsp\u0026quot;,\u0026quot;jspa\u0026quot;,\u0026quot;jspx\u0026quot;,\u0026quot;jsw\u0026quot;,\u0026quot;jsv\u0026quot;,\u0026quot;jspf\u0026quot;,\u0026quot;jtml\u0026quot;,\u0026quot;asp\u0026quot;,\u0026quot;aspx\u0026quot;,\u0026quot;asa\u0026quot;,\u0026quot;asax\u0026quot;,\u0026quot;ascx\u0026quot;,\u0026quot;ashx\u0026quot;,\u0026quot;asmx\u0026quot;,\u0026quot;cer\u0026quot;,\u0026quot;swf\u0026quot;,\u0026quot;htaccess\u0026quot;); $file_name = $_POST['save_name']; $file_ext = pathinfo($file_name,PATHINFO_EXTENSION); if(!in_array($file_ext,$deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' .$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; }else{ $msg = '上传出错！'; } }else{ $msg = '禁止保存为该类型文件！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } }  函数分析：\n源码分析：\nif (file_exists(UPLOAD_PATH)) { //黑名单 $deny_ext = array(\u0026quot;php\u0026quot;,\u0026quot;php5\u0026quot;,\u0026quot;php4\u0026quot;,\u0026quot;php3\u0026quot;,\u0026quot;php2\u0026quot;,\u0026quot;html\u0026quot;,\u0026quot;htm\u0026quot;,\u0026quot;phtml\u0026quot;,\u0026quot;pht\u0026quot;,\u0026quot;jsp\u0026quot;,\u0026quot;jspa\u0026quot;,\u0026quot;jspx\u0026quot;,\u0026quot;jsw\u0026quot;,\u0026quot;jsv\u0026quot;,\u0026quot;jspf\u0026quot;,\u0026quot;jtml\u0026quot;,\u0026quot;asp\u0026quot;,\u0026quot;aspx\u0026quot;,\u0026quot;asa\u0026quot;,\u0026quot;asax\u0026quot;,\u0026quot;ascx\u0026quot;,\u0026quot;ashx\u0026quot;,\u0026quot;asmx\u0026quot;,\u0026quot;cer\u0026quot;,\u0026quot;swf\u0026quot;,\u0026quot;htaccess\u0026quot;); $file_name = $_POST['save_name']; $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);//**返回文件后缀名** if(!in_array($file_ext,$deny_ext)) {//黑名单判断 $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' .$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true;  如下，由源码可得，最后图片的名字 $file_name 拼接而成，因此如果在中途将 $file_name 换掉，最开始 $file_name = upload-19.jpg，如果我们中途将他换成 upload-19.php +(二进制00截断)那么便可以以我们想要的格式执行。\n解题姿势一： 00截断\n上传成功\n蚁剑连接成功\n绕过姿势二：\n大写绕过\n可以发现黑名单都是小写，所以可以利用大写绕过\n蚁剑连接成功\n绕过姿势三：\nmove_uploaded_file()有一个trick，会忽略掉文件末尾的/.。这里是用户可控的。\nmove_uploaded_file会忽略掉文件末尾的/. 所以可以构造save_path=1.php/.,这样file_ext值就为空，就能绕过黑名单，而move_uploaded_file函数忽略文件末尾的/.可以实现保存文件为.php\npost: save_name = 1.php/.\nPASS-21 贴一下代码：\n$is_upload = false; $msg = null; if(!empty($_FILES['upload_file'])){ //检查MIME $allow_type = array('image/jpeg','image/png','image/gif'); if(!in_array($_FILES['upload_file']['type'],$allow_type)){ $msg = \u0026quot;禁止上传该类型文件!\u0026quot;; }else{ //检查文件名 $file = empty($_POST['save_name']) ? $_FILES['upload_file']['name'] : $_POST['save_name']; if (!is_array($file)) { $file = explode('.', strtolower($file)); } $ext = end($file); $allow_suffix = array('jpg','png','gif'); if (!in_array($ext, $allow_suffix)) { $msg = \u0026quot;禁止上传该后缀文件!\u0026quot;; }else{ $file_name = reset($file) . '.' . $file[count($file) - 1]; $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' .$file_name; if (move_uploaded_file($temp_file, $img_path)) { $msg = \u0026quot;文件上传成功！\u0026quot;; $is_upload = true; } else { $msg = \u0026quot;文件上传失败！\u0026quot;; } } } }else{ $msg = \u0026quot;请选择要上传的文件！\u0026quot;; }  相比较于上一关的源码，此处服务器端先是检查了MIME类型，然后判断save_name参数是否为空，为空就把文件本来名称赋值给$file,否则就是将save_name参数的值赋给它。紧接着判断$file是否是数组。\n如果不是数组则将其拆成数组，然后数组最后一个的值(end函数就是取数组最后一个的值)同白名单做比较，符合jpg、png、gif中的一种就允许上传了。\n在允许上传之后还要把数组的值拼接在一起对文件进行重命名。所以我们可以构造save_name[0]=1.php/ save_name[1]置为空 save_name[2]=jpg(一个白名单的合法后缀)。\n这样的话，reset($file)取的是数组的第一个元素即1.php/，然后接了一个'.\u0026lsquo;符号，之后又将数组最后一个元素内容拼接到一起。\n可能有的人会疑问数组最后一个值不是jpg吗？其实当我们只设置了两个数组元素的时候，数组的元素个数就只有两个了。\n既然一共只有两个元素，这里就是$file[2-1]也就是$file[1]。因此拼接的就是空的，最终得到的文件名就是1.php/.。\n对于像1.php/.这样的文件路径，move_uploaded_file()函数会忽略掉文件末尾的/.。如此一来我们上传到服务器的文件还是被重命名为了php后缀。\n第一步：上传文件，抓包修改参数\n蚁剑连接：\n拓展： 1、一句话木马： 指的是一句简单的脚本语言。\n php：asp：\u0026lt;%eval request (\u0026ldquo;pass\u0026rdquo;)%\u0026gt; aspx：\u0026lt;%@ Page Language=\u0026ldquo;Jscript\u0026rdquo;%\u0026gt; \u0026lt;%eval(Request.Item[\u0026ldquo;pass\u0026rdquo;],\u0026ldquo;unsafe\u0026rdquo;);%\u0026gt;\n web变种一句话\n\u0026lt;?php error_reporting(0); $_GET['POST']($_POST['GET']); ?\u0026gt;  \u0026lt;?php $POST['POST']='assert'; $array[]=$POST; $array[0]['POST']($_POST['assert']); ?\u0026gt;  文件上传漏洞巧妙绕过：\n链接1：（内容很全，概括的也多的，并且引用详细，如果不清楚值得做参考。） 点击\n总结：\n（1）、寻找上传点–\u0026gt;上传木马 （2）、XSS被动攻击 首先判断版本IS6.0的解析漏洞 （1）、没有过滤：四种工具（过waf的能力）：菜刀、冰蝎、蚁剑、 没有使用白名单的都会有问题。传上去：\u0026lt;–找文件路径（1、路劲：反弹路径名称、post，request，可能直接显示网页，2、不知路径：爆破目录—\u0026gt;upload路劲） 二、规定只能，，， 黑名单：必须上传 制作图片马（无法直接解释执行），执行办法： 1、定义路径，.php…asp等 2、。htaccsee采用，，，规则，自己定义后缀 3、采用include方式，把图片引用到某一个php中运行，（后台当中）,利用后台 4、其他，is的解析漏洞,cer，php3,php4,php5， 5、其他：多能空间（什么文件都可运行），tomcat（），运行php， 6、00截断（各种截断，利用为协议或者保存时文件发生改变），.php%00jpe 7、客户端验证：全部都可以绕过 8、操作系统特性：例如：文件 只能存288个字符如果没有哈希，那么可以利用，Windows7.0，Windows8.0等等 9、后台保存路径和后缀名的默认格式：模板编辑器（保存配置）例如：config.php 封闭前面  文件解析漏洞（即中间件漏洞）\n关于以上漏洞的相关原理，例如00截断，空格截断等等。 文件解析漏洞：是指中间件（Apache、nginx、iis等）在解析文件时出现了漏洞，从而，黑客可以利用该漏洞实现非法文件的解析。 链接：点击\n（1）、PHP解析漏洞 Apache将从右至左开始判断后缀，若x3非可识别后缀，再判断x2，一直到找到可识别后缀为止，然后将该可识别后缀进解析。Apache的文件解析过程是从右到左开始判断解析,如果为不可识别的后缀解析,就再往左判断。\n在Apache的解析中，除了“php|php3|phtml”等规定的后缀中，任何的后缀加入，都是不会被识别解析的，也会被跳过后缀处理。\n（2）、PHP CGI解析漏洞 当php的配置文件中的选项cgi.fix_pathinfo = 1开启时，当访问http://www.xxxx.com/a.txt/a.php时，若a.php不存在，则PHP会递归向前解析，将a.txt当作php脚本来解析。\nIIS中：任意文件名/任意文件名.php就会被解析为php\nNginx中：任意文件名/任意文件名.php就会被解析为php\n（3）、操作系统限制解析漏洞 由于windows系统会将文件的后缀名中空格以及点进行过滤，如果遇到是黑名单校验的，如限制不允许上传PHP文件，而受害者系统又是windows系统，那么我们可以上传jaky.php ,或者jaky.php.通过这种方式就可以绕过黑名单检验的文件上传。\n（4）、文件头欺骗漏洞 一般GIF图片用文本编辑器打开的时候，可以看到文件头是采用了“GIF89a”的字样。 （5）filepath/filetype漏洞 filepath漏洞是为了防止上传文件被重新命名归置文件而诞生的另一种攻击手段。我们可以Burp抓包来更改数据包里面的内容。将“filepath”中加入自己创建的路径名来篡改上传的文件的路径。 2、filetype漏洞主要的利用方式是利用请求数据包中的“content-type”字段.将正常请求数据包中的“content-type:images/jpeg”更改为“content-type:text/asp”再对请求的文件进行空字节截断的方式配合攻击。 （6）、空字节截断利用漏洞（%00） （7）、iconv函数限制上传 （8）、双文件并发上传漏洞（及条件竞争漏洞）## Upload labs 首刷（包含初次理解及部分函数解释及WP） PS:这只是个菜鸟的小小记录，参考很多大佬的博客，有什么不正确的地方欢迎指正\n","date":"2021-04-05","permalink":"https://Phoenix-Pl.github.io/post/upload-labs%E5%85%A8%E5%85%B3%E8%AF%A6%E8%A7%A3/","tags":null,"title":"Upload Labs全关详解"},{"content":"  This post is for in-post APlayer test, above is previous post-player.\nMusic files are all downloaded from Free Music Archive.\nSingle file   Multiple files You can open the playlist to check other musics.\n  Spaces between multiple items can be omited.\n","date":"2021-01-10","permalink":"https://Phoenix-Pl.github.io/post/aplayer-test/","tags":["test","aplayer"],"title":"In-post APlayer Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-05-11","permalink":"https://Phoenix-Pl.github.io/post/markdown-syntax/","tags":["markdown","css","html","themes"],"title":"Markdown Syntax"},{"content":"测试测试测试\n","date":"2020-05-11","permalink":"https://Phoenix-Pl.github.io/post/text1/","tags":["markdown","css","html","themes"],"title":"Test"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026quot;math.html\u0026quot; . }} {{ end }}   To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions Examples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2020-03-08","permalink":"https://Phoenix-Pl.github.io/post/math-typesetting/","tags":null,"title":"Math Typesetting"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo. Redit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09","permalink":"https://Phoenix-Pl.github.io/post/placeholder-text/","tags":["markdown","text"],"title":"Placeholder Text"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n:s ee_no_evil:[Remove the space] 🙈 :h ear_no_evil:[Remove the space] 🙉 :s peak_no_evil:[Remove the space] 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05","permalink":"https://Phoenix-Pl.github.io/post/emoji-support/","tags":["emoji"],"title":"Emoji Support"},{"content":"The following is part of the CJK text, this page is for test use only.\nCJK Radicals Supplement ⺀ ⺁ ⺂ ⺃ ⺄ ⺅ ⺆ ⺇ ⺈ ⺉ ⺊ ⺋ ⺌ ⺍ ⺎ ⺏ ⺐ ⺑ ⺒ ⺓ ⺔ ⺕ ⺖ ⺗ ⺘ ⺙ ⺛ ⺜ ⺝ ⺞ ⺟ ⺠ ⺡ ⺢ ⺣ ⺤ ⺥ ⺦ ⺧ ⺨ ⺩ ⺪ ⺫ ⺬ ⺭ ⺮ ⺯ ⺰ ⺱ ⺲ ⺳ ⺴ ⺵ ⺶ ⺷ ⺸ ⺹ ⺺ ⺻ ⺼ ⺽ ⺾ ⺿ ⻀ ⻁ ⻂ ⻃ ⻄ ⻅ ⻆ ⻇ ⻈ ⻉ ⻊ ⻋ ⻌ ⻍ ⻎ ⻏ ⻐ ⻑ ⻒ ⻓ ⻔ ⻕ ⻖ ⻗ ⻘ ⻙ ⻚ ⻛ ⻜ ⻝ ⻞ ⻟ ⻠ ⻡ ⻢ ⻣ ⻤ ⻥ ⻦ ⻧ ⻨ ⻩ ⻪ ⻫ ⻬ ⻭ ⻮ ⻯ ⻰ ⻱ ⻲ ⻳\nKangxi Radicals ⼀ ⼁ ⼂ ⼃ ⼄ ⼅ ⼆ ⼇ ⼈ ⼉ ⼊ ⼋ ⼌ ⼍ ⼎ ⼏ ⼐ ⼑ ⼒ ⼓ ⼔ ⼕ ⼖ ⼗ ⼘ ⼙ ⼚ ⼛ ⼜ ⼝ ⼞ ⼟ ⼠ ⼡ ⼢ ⼣ ⼤ ⼥ ⼦ ⼧ ⼨ ⼩ ⼪ ⼫ ⼬ ⼭ ⼮ ⼯ ⼰ ⼱ ⼲ ⼳ ⼴ ⼵ ⼶ ⼷ ⼸ ⼹ ⼺ ⼻ ⼼ ⼽ ⼾ ⼿ ⽀ ⽁ ⽂ ⽃ ⽄ ⽅ ⽆ ⽇ ⽈ ⽉ ⽊ ⽋ ⽌ ⽍ ⽎ ⽏ ⽐ ⽑ ⽒ ⽓ ⽔ ⽕ ⽖ ⽗ ⽘ ⽙ ⽚ ⽛ ⽜ ⽝ ⽞ ⽟ ⽠ ⽡ ⽢ ⽣ ⽤ ⽥ ⽦ ⽧ ⽨ ⽩ ⽪ ⽫ ⽬ ⽭ ⽮ ⽯ ⽰ ⽱ ⽲ ⽳ ⽴ ⽵ ⽶ ⽷ ⽸ ⽹ ⽺ ⽻ ⽼ ⽽ ⽾ ⽿ \u0026hellip;\nCJK Symbols and Punctuation 、 。 〃 〄 々 〆 〇 〈 〉 《 》 「 」 『 』 【 】 〒 〓 〔 〕 〖 〗 〘 〙 〚 〛 〜 〝 〞 〟 〠 〡 〢 〣 〤 〥 〦 〧 〨 〩 〪 〫 〬 〭 〮 〯 〰 〱 〲 〳 〴 〵 〶 〷 〸 〹 〺 〻 〼 〽 〾 〿\nHiragana ぁ あ ぃ い ぅ う ぇ え ぉ お か が き ぎ く ぐ け げ こ ご さ ざ し じ す ず せ ぜ そ ぞ た だ ち ぢ っ つ づ て で と ど な に ぬ ね の は ば ぱ ひ び ぴ ふ ぶ ぷ へ べ ぺ ほ ぼ ぽ ま み む め も ゃ や ゅ ゆ ょ よ ら り る れ ろ ゎ わ ゐ ゑ を ん ゔ ゕ ゖ ゙ ゚ ゛ ゜ ゝ ゞ ゟ\nKatakana ゠ ァ ア ィ イ ゥ ウ ェ エ ォ オ カ ガ キ ギ ク グ ケ ゲ コ ゴ サ ザ シ ジ ス ズ セ ゼ ソ ゾ タ ダ チ ヂ ッ ツ ヅ テ デ ト ド ナ ニ ヌ ネ ノ ハ バ パ ヒ ビ ピ フ ブ プ ヘ ベ ペ ホ ボ ポ マ ミ ム メ モ ャ ヤ ュ ユ ョ ヨ ラ リ ル レ ロ ヮ ワ ヰ ヱ ヲ ン ヴ ヵ ヶ ヷ ヸ ヹ ヺ ・ ー ヽ ヾ ヿ\nBopomofo ㄅ ㄆ ㄇ ㄈ ㄉ ㄊ ㄋ ㄌ ㄍ ㄎ ㄏ ㄐ ㄑ ㄒ ㄓ ㄔ ㄕ ㄖ ㄗ ㄘ ㄙ ㄚ ㄛ ㄜ ㄝ ㄞ ㄟ ㄠ ㄡ ㄢ ㄣ ㄤ ㄥ ㄦ ㄧ ㄨ ㄩ ㄪ ㄫ ㄬ\nHangul Compatibility Jamo ㄱ ㄲ ㄳ ㄴ ㄵ ㄶ ㄷ ㄸ ㄹ ㄺ ㄻ ㄼ ㄽ ㄾ ㄿ ㅀ ㅁ ㅂ ㅃ ㅄ ㅅ ㅆ ㅇ ㅈ ㅉ ㅊ ㅋ ㅌ ㅍ ㅎ ㅏ ㅐ ㅑ ㅒ ㅓ ㅔ ㅕ ㅖ ㅗ ㅘ ㅙ ㅚ ㅛ ㅜ ㅝ ㅞ ㅟ ㅠ ㅡ ㅢ ㅣ ㅤ ㅥ ㅦ ㅧ ㅨ ㅩ ㅪ ㅫ ㅬ ㅭ ㅮ ㅯ ㅰ ㅱ ㅲ ㅳ ㅴ ㅵ ㅶ ㅷ ㅸ ㅹ ㅺ ㅻ ㅼ ㅽ ㅾ ㅿ ㆀ ㆁ ㆂ ㆃ ㆄ ㆅ ㆆ ㆇ ㆈ ㆉ ㆊ ㆋ ㆌ ㆍ ㆎ\nKanbun ㆐ ㆑ ㆒ ㆓ ㆔ ㆕ ㆖ ㆗ ㆘ ㆙ ㆚ ㆛ ㆜ ㆝ ㆞ ㆟\nBopomofo Extended ㆠ ㆡ ㆢ ㆣ ㆤ ㆥ ㆦ ㆧ ㆨ ㆩ ㆪ ㆫ ㆬ ㆭ ㆮ ㆯ ㆰ ㆱ ㆲ ㆳ ㆴ ㆵ ㆶ ㆷ\nKatakana Phonetic Extensions ㇰ ㇱ ㇲ ㇳ ㇴ ㇵ ㇶ ㇷ ㇸ ㇹ ㇺ ㇻ ㇼ ㇽ ㇾ ㇿ\nEnclosed CJK Letters and Months ㈀ ㈁ ㈂ ㈃ ㈄ ㈅ ㈆ ㈇ ㈈ ㈉ ㈊ ㈋ ㈌ ㈍ ㈎ ㈏ ㈐ ㈑ ㈒ ㈓ ㈔ ㈕ ㈖ ㈗ ㈘ ㈙ ㈚ ㈛ ㈜ ㈠ ㈡ ㈢ ㈣ ㈤ ㈥ ㈦ ㈧ ㈨ ㈩ ㈪ ㈫ ㈬ ㈭ ㈮ ㈯ ㈰ ㈱ ㈲ ㈳ ㈴ ㈵ ㈶ ㈷ ㈸ ㈹ ㈺ ㈻ ㈼ ㈽ ㈾ ㈿ ㉀ ㉁ ㉂ ㉃ ㉑ ㉒ ㉓ ㉔ ㉕ ㉖ ㉗ ㉘ ㉙ ㉚ ㉛ ㉜ ㉝ ㉞ ㉟ ㉠ ㉡ ㉢ ㉣ ㉤ ㉥ ㉦ ㉧ ㉨ ㉩ ㉪ ㉫ ㉬ ㉭ ㉮ ㉯ ㉰ ㉱ ㉲ ㉳ ㉴ ㉵ ㉶ ㉷ ㉸ ㉹ ㉺ ㉻ ㉿ ㊀ ㊁ ㊂ ㊃ ㊄ ㊅ ㊆ ㊇ ㊈ ㊉ ㊊ ㊋ ㊌ ㊍ ㊎ ㊏ ㊐ ㊑ ㊒ \u0026hellip;\nCJK Compatibility ㌀ ㌁ ㌂ ㌃ ㌄ ㌅ ㌆ ㌇ ㌈ ㌉ ㌊ ㌋ ㌌ ㌍ ㌎ ㌏ ㌐ ㌑ ㌒ ㌓ ㌔ ㌕ ㌖ ㌗ ㌘ ㌙ ㌚ ㌛ ㌜ ㌝ ㌞ ㌟ ㌠ ㌡ ㌢ ㌣ ㌤ ㌥ ㌦ ㌧ ㌨ ㌩ ㌪ ㌫ ㌬ ㌭ ㌮ ㌯ ㌰ ㌱ ㌲ ㌳ ㌴ ㌵ ㌶ ㌷ ㌸ ㌹ ㌺ ㌻ ㌼ ㌽ ㌾ ㌿ ㍀ ㍁ ㍂ ㍃ ㍄ ㍅ ㍆ ㍇ ㍈ ㍉ ㍊ ㍋ ㍌ ㍍ ㍎ ㍏ ㍐ ㍑ ㍒ ㍓ ㍔ ㍕ ㍖ ㍗ ㍘ ㍙ ㍚ ㍛ ㍜ ㍝ ㍞ ㍟ ㍠ ㍡ ㍢ ㍣ ㍤ ㍥ ㍦ ㍧ ㍨ ㍩ ㍪ ㍫ ㍬ ㍭ ㍮ ㍯ ㍰ ㍱ ㍲ ㍳ ㍴ ㍵ ㍶ ㍻ ㍼ ㍽ ㍾ ㍿ ㎀ ㎁ ㎂ ㎃ \u0026hellip;\nCJK Unified Ideographs Extension A 㐀 㐁 㐂 㐃 㐄 㐅 㐆 㐇 㐈 㐉 㐊 㐋 㐌 㐍 㐎 㐏 㐐 㐑 㐒 㐓 㐔 㐕 㐖 㐗 㐘 㐙 㐚 㐛 㐜 㐝 㐞 㐟 㐠 㐡 㐢 㐣 㐤 㐥 㐦 㐧 㐨 㐩 㐪 㐫 㐬 㐭 㐮 㐯 㐰 㐱 㐲 㐳 㐴 㐵 㐶 㐷 㐸 㐹 㐺 㐻 㐼 㐽 㐾 㐿 㑀 㑁 㑂 㑃 㑄 㑅 㑆 㑇 㑈 㑉 㑊 㑋 㑌 㑍 㑎 㑏 㑐 㑑 㑒 㑓 㑔 㑕 㑖 㑗 㑘 㑙 㑚 㑛 㑜 㑝 㑞 㑟 㑠 㑡 㑢 㑣 㑤 㑥 㑦 㑧 㑨 㑩 㑪 㑫 㑬 㑭 㑮 㑯 㑰 㑱 㑲 㑳 㑴 㑵 㑶 㑷 㑸 㑹 㑺 㑻 㑼 㑽 㑾 㑿 \u0026hellip;\nCJK Unified Ideographs 一 丁 丂 七 丄 丅 丆 万 丈 三 上 下 丌 不 与 丏 丐 丑 丒 专 且 丕 世 丗 丘 丙 业 丛 东 丝 丞 丟 丠 両 丢 丣 两 严 並 丧 丨 丩 个 丫 丬 中 丮 丯 丰 丱 串 丳 临 丵 丶 丷 丸 丹 为 主 丼 丽 举 丿 乀 乁 乂 乃 乄 久 乆 乇 么 义 乊 之 乌 乍 乎 乏 乐 乑 乒 乓 乔 乕 乖 乗 乘 乙 乚 乛 乜 九 乞 也 习 乡 乢 乣 乤 乥 书 乧 乨 乩 乪 乫 乬 乭 乮 乯 买 乱 乲 乳 乴 乵 乶 乷 乸 乹 乺 乻 乼 乽 乾 乿 \u0026hellip;\nHangul Syllables 가 각 갂 갃 간 갅 갆 갇 갈 갉 갊 갋 갌 갍 갎 갏 감 갑 값 갓 갔 강 갖 갗 갘 같 갚 갛 개 객 갞 갟 갠 갡 갢 갣 갤 갥 갦 갧 갨 갩 갪 갫 갬 갭 갮 갯 갰 갱 갲 갳 갴 갵 갶 갷 갸 갹 갺 갻 갼 갽 갾 갿 걀 걁 걂 걃 걄 걅 걆 걇 걈 걉 걊 걋 걌 걍 걎 걏 걐 걑 걒 걓 걔 걕 걖 걗 걘 걙 걚 걛 걜 걝 걞 걟 걠 걡 걢 걣 걤 걥 걦 걧 걨 걩 걪 걫 걬 걭 걮 걯 거 걱 걲 걳 건 걵 걶 걷 걸 걹 걺 걻 걼 걽 걾 걿 \u0026hellip;\nCJK Compatibility Ideographs 豈 更 車 賈 滑 串 句 龜 龜 契 金 喇 奈 懶 癩 羅 蘿 螺 裸 邏 樂 洛 烙 珞 落 酪 駱 亂 卵 欄 爛 蘭 鸞 嵐 濫 藍 襤 拉 臘 蠟 廊 朗 浪 狼 郎 來 冷 勞 擄 櫓 爐 盧 老 蘆 虜 路 露 魯 鷺 碌 祿 綠 菉 錄 鹿 論 壟 弄 籠 聾 牢 磊 賂 雷 壘 屢 樓 淚 漏 累 縷 陋 勒 肋 凜 凌 稜 綾 菱 陵 讀 拏 樂 諾 丹 寧 怒 率 異 北 磻 便 復 不 泌 數 索 參 塞 省 葉 說 殺 辰 沈 拾 若 掠 略 亮 兩 凉 梁 糧 良 諒 量 勵 \u0026hellip;\nCJK Compatibility Forms ︰ ︱ ︲ ︳ ︴ ︵ ︶ ︷ ︸ ︹ ︺ ︻ ︼ ︽ ︾ ︿ ﹀ ﹁ ﹂ ﹃ ﹄ ﹅ ﹆ ﹉ ﹊ ﹋ ﹌ ﹍ ﹎ ﹏\n","date":"2018-03-09","permalink":"https://Phoenix-Pl.github.io/post/cjk-unicode-test/","tags":["test","cjk"],"title":"CJK Unicode Test"},{"content":"本文内容无实际意义，由狗屁不通文章生成器自动生成，不代表作者本人观点。\n可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。一段代码写一天，到底应该如何实现。马克思在不经意间这样说过，一切节省，归根到底都归结为时间的节省。这不禁令我深思。马克思曾经说过，一切节省，归根到底都归结为时间的节省。\n带着这句话，我们还要更加慎重的审视这个问题：对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。既然如何，我们不得不面对一个非常尴尬的事实，那就是，亚伯拉罕·林肯曾经提到过，你活了多少岁不算什么，重要的是你是如何度过这些岁月的。这启发了我，了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。我认为，在这种困难的抉择下，本人思来想去，寝食难安。所谓一段代码写一天，关键是一段代码写一天需要如何写。裴斯泰洛齐在不经意间这样说过，今天应做的事没有做，明天再早也是耽误了。这句话语虽然很短，但令我浮想联翩。总结的来说，带着这些问题，我们来审视一下一段代码写一天。西班牙曾经说过，自知之明是最难得的知识。这不禁令我深思。可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。贝多芬在不经意间这样说过，卓越的人一大优点是：在不利与艰难的遭遇里百折不饶。带着这句话，我们还要更加慎重的审视这个问题：在这种困难的抉择下，本人思来想去，寝食难安。问题的关键究竟为何？对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。\n每个人都不得不面对这些问题。在面对这种问题时，歌德曾经提到过，读一本好书，就如同和一个高尚的人在交谈。这似乎解答了我的疑惑。歌德在不经意间这样说过，读一本好书，就如同和一个高尚的人在交谈。我希望诸位也能好好地体会这句话。从这个角度来看，一段代码写一天的发生，到底需要如何做到，不一段代码写一天的发生，又会如何产生。可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。现在，解决一段代码写一天的问题，是非常非常重要的。所以，马克思曾经提到过，一切节省，归根到底都归结为时间的节省。这似乎解答了我的疑惑。一般来讲，我们都必须务必慎重的考虑考虑。阿卜·日·法拉兹曾经说过，学问是异常珍贵的东西，从任何源泉吸收都不可耻。我希望诸位也能好好地体会这句话。既然如此，就我个人来说，一段代码写一天对我的意义，不能不说非常重大。白哲特曾经说过，坚强的信念能赢得强者的心，并使他们变得更坚强。带着这句话，我们还要更加慎重的审视这个问题：富勒在不经意间这样说过，苦难磨炼一些人，也毁灭另一些人。带着这句话，我们还要更加慎重的审视这个问题：这样看来，一般来讲，我们都必须务必慎重的考虑考虑。从这个角度来看，从这个角度来看，这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。而这些并不是完全重要，更加重要的问题是。\n带着这些问题，我们来审视一下一段代码写一天。要想清楚，一段代码写一天，到底是一种怎么样的存在。经过上述讨论，生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。佚名曾经提到过，感激每一个新的挑战，因为它会锻造你的意志和品格。这句话语虽然很短，但令我浮想联翩。现在，解决一段代码写一天的问题，是非常非常重要的。所以，每个人都不得不面对这些问题。在面对这种问题时，我们都知道，只要有意义，那么就必须慎重考虑。经过上述讨论。\n了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。一般来说，了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。笛卡儿在不经意间这样说过，阅读一切好书如同和过去最杰出的人谈话。我希望诸位也能好好地体会这句话。在这种困难的抉择下，本人思来想去，寝食难安。问题的关键究竟为何？了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。莎士比亚曾经说过，抛弃时间的人，时间也抛弃他。我希望诸位也能好好地体会这句话。\n笛卡儿说过一句富有哲理的话，阅读一切好书如同和过去最杰出的人谈话。这句话语虽然很短，但令我浮想联翩。鲁巴金曾经提到过，读书是在别人思想的帮助下，建立起自己的思想。这启发了我，了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。一段代码写一天因何而发生？一段代码写一天因何而发生？我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。邓拓曾经说过，越是没有本领的就越加自命不凡。这启发了我，从这个角度来看，一般来讲，我们都必须务必慎重的考虑考虑。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。一般来说。\n对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。总结的来说，从这个角度来看，本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。德谟克利特说过一句富有哲理的话，节制使快乐增加并使享受加强。我希望诸位也能好好地体会这句话。生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。我们都知道，只要有意义，那么就必须慎重考虑。就我个人来说，一段代码写一天对我的意义，不能不说非常重大。史美尔斯曾经提到过，书籍把我们引入最美好的社会，使我们认识各个时代的伟大智者。这句话语虽然很短，但令我浮想联翩。一般来讲，我们都必须务必慎重的考虑考虑。既然如此，我们都知道，只要有意义，那么就必须慎重考虑。这样看来，就我个人来说，一段代码写一天对我的意义，不能不说非常重大。德国曾经提到过，只有在人群中间，才能认识自己。我希望诸位也能好好地体会这句话。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。\n所谓一段代码写一天，关键是一段代码写一天需要如何写。我们不得不面对一个非常尴尬的事实，那就是，从这个角度来看，可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。莎士比亚在不经意间这样说过，意志命运往往背道而驰，决心到最后会全部推倒。我希望诸位也能好好地体会这句话。一段代码写一天，到底应该如何实现。那么，一段代码写一天，到底应该如何实现。可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。一段代码写一天，发生了会如何，不发生又会如何。在这种困难的抉择下，本人思来想去，寝食难安。塞涅卡在不经意间这样说过，生命如同寓言，其价值不在与长短，而在与内容。这不禁令我深思。那么，生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。所谓一段代码写一天，关键是一段代码写一天需要如何写。我认为，所谓一段代码写一天，关键是一段代码写一天需要如何写。可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。一段代码写一天的发生，到底需要如何做到，不一段代码写一天的发生，又会如何产生。这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。在这种困难的抉择下，本人思来想去，寝食难安。带着这些问题，我们来审视一下一段代码写一天。一段代码写一天，到底应该如何实现。一段代码写一天，发生了会如何，不发生又会如何。既然如何，要想清楚，一段代码写一天，到底是一种怎么样的存在。那么，生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。总结的来说，那么，带着这些问题，我们来审视一下一段代码写一天。要想清楚，一段代码写一天，到底是一种怎么样的存在。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。我们不得不面对一个非常尴尬的事实，那就是，总结的来说，对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。一段代码写一天，发生了会如何，不发生又会如何。西班牙曾经提到过，自己的鞋子，自己知道紧在哪里。带着这句话，我们还要更加慎重的审视这个问题：既然如何，每个人都不得不面对这些问题。在面对这种问题时，问题的关键究竟为何？从这个角度来看，既然如此，在这种困难的抉择下，本人思来想去，寝食难安。我认为。\n一段代码写一天因何而发生？我们不得不面对一个非常尴尬的事实，那就是，洛克在不经意间这样说过，学到很多东西的诀窍，就是一下子不要学很多。这不禁令我深思。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。一般来说，而这些并不是完全重要，更加重要的问题是，问题的关键究竟为何？而这些并不是完全重要，更加重要的问题是，对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。一段代码写一天因何而发生？所谓一段代码写一天，关键是一段代码写一天需要如何写。一段代码写一天因何而发生？这样看来，一段代码写一天，到底应该如何实现。卡耐基说过一句富有哲理的话，一个不注意小事情的人，永远不会成就大事业。带着这句话，我们还要更加慎重的审视这个问题：一段代码写一天，到底应该如何实现。既然如此，而这些并不是完全重要，更加重要的问题是。\n冯学峰说过一句富有哲理的话，当一个人用工作去迎接光明，光明很快就会来照耀着他。我希望诸位也能好好地体会这句话。了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。而这些并不是完全重要，更加重要的问题是，那么，要想清楚，一段代码写一天，到底是一种怎么样的存在。从这个角度来看，一段代码写一天，发生了会如何，不发生又会如何。对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。在这种困难的抉择下，本人思来想去，寝食难安。我们都知道，只要有意义，那么就必须慎重考虑。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。问题的关键究竟为何？本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。鲁巴金曾经提到过，读书是在别人思想的帮助下，建立起自己的思想。这不禁令我深思。莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这启发了我。\n所谓一段代码写一天，关键是一段代码写一天需要如何写。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。海贝尔曾经说过，人生就是学校。在那里，与其说好的教师是幸福，不如说好的教师是不幸。这似乎解答了我的疑惑。德国曾经说过，只有在人群中间，才能认识自己。这不禁令我深思。这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。带着这些问题，我们来审视一下一段代码写一天。这样看来，了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。克劳斯·莫瑟爵士在不经意间这样说过，教育需要花费钱，而无知也是一样。这似乎解答了我的疑惑。对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。一般来讲，我们都必须务必慎重的考虑考虑。一般来讲，我们都必须务必慎重的考虑考虑。一段代码写一天因何而发生？对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。而这些并不是完全重要，更加重要的问题是，一般来讲，我们都必须务必慎重的考虑考虑。我们都知道，只要有意义，那么就必须慎重考虑。本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。博说过一句富有哲理的话，一次失败，只是证明我们成功的决心还够坚强。维这启发了我，从这个角度来看，问题的关键究竟为何？这样看来，既然如此，所谓一段代码写一天，关键是一段代码写一天需要如何写。可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。总结的来说，我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。经过上述讨论，史美尔斯说过一句富有哲理的话，书籍把我们引入最美好的社会，使我们认识各个时代的伟大智者。带着这句话，我们还要更加慎重的审视这个问题：在这种困难的抉择下，本人思来想去，寝食难安。在这种困难的抉择下，本人思来想去，寝食难安。冯学峰曾经说过，当一个人用工作去迎接光明，光明很快就会来照耀着他。这句话语虽然很短，但令我浮想联翩。\n所谓一段代码写一天，关键是一段代码写一天需要如何写。米歇潘在不经意间这样说过，生命是一条艰险的峡谷，只有勇敢的人才能通过。我希望诸位也能好好地体会这句话。问题的关键究竟为何？培根在不经意间这样说过，合理安排时间，就等于节约时间。这句话语虽然很短，但令我浮想联翩。吉格·金克拉说过一句富有哲理的话，如果你能做梦，你就能实现它。这启发了我，这样看来，既然如何，吉格·金克拉说过一句富有哲理的话，如果你能做梦，你就能实现它。这句话语虽然很短，但令我浮想联翩。所谓一段代码写一天，关键是一段代码写一天需要如何写。我们不得不面对一个非常尴尬的事实，那就是，在这种困难的抉择下，本人思来想去，寝食难安。要想清楚，一段代码写一天，到底是一种怎么样的存在。了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。我们不得不面对一个非常尴尬的事实，那就是，了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。所谓一段代码写一天，关键是一段代码写一天需要如何写。而这些并不是完全重要，更加重要的问题是，左拉在不经意间这样说过，生活的道路一旦选定，就要勇敢地走到底，决不回头。这似乎解答了我的疑惑。一般来讲，我们都必须务必慎重的考虑考虑。一般来说，经过上述讨论，总结的来说，一般来讲，我们都必须务必慎重的考虑考虑。这样看来，既然如此，一般来说，一段代码写一天，发生了会如何，不发生又会如何。那么，既然如此，每个人都不得不面对这些问题。在面对这种问题时，莎士比亚曾经提到过，本来无望的事，大胆尝试，往往能成功。带着这句话，我们还要更加慎重的审视这个问题：韩非在不经意间这样说过，内外相应，言行相称。这似乎解答了我的疑惑。杰纳勒尔·乔治·S·巴顿说过一句富有哲理的话，接受挑战，就可以享受胜利的喜悦。这不禁令我深思。我们不得不面对一个非常尴尬的事实，那就是，总结的来说，现在，解决一段代码写一天的问题，是非常非常重要的。所以，我们不得不面对一个非常尴尬的事实，那就是，我认为，就我个人来说，一段代码写一天对我的意义，不能不说非常重大。我们都知道，只要有意义，那么就必须慎重考虑。培根在不经意间这样说过，合理安排时间，就等于节约时间。带着这句话，我们还要更加慎重的审视这个问题：可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。从这个角度来看，一般来讲，我们都必须务必慎重的考虑考虑。那么，所谓一段代码写一天，关键是一段代码写一天需要如何写。歌德曾经说过，意志坚强的人能把世界放在手中像泥块一样任意揉捏。带着这句话，我们还要更加慎重的审视这个问题：这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。一段代码写一天的发生，到底需要如何做到，不一段代码写一天的发生，又会如何产生。每个人都不得不面对这些问题。在面对这种问题时，就我个人来说，一段代码写一天对我的意义，不能不说非常重大。塞涅卡曾经提到过，生命如同寓言，其价值不在与长短，而在与内容。这句话语虽然很短，但令我浮想联翩。\n我们都知道，只要有意义，那么就必须慎重考虑。带着这些问题，我们来审视一下一段代码写一天。笛卡儿曾经说过，我的努力求学没有得到别的好处，只不过是愈来愈发觉自己的无知。带着这句话，我们还要更加慎重的审视这个问题：现在，解决一段代码写一天的问题，是非常非常重要的。所以，本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。迈克尔·F·斯特利曾经提到过，最具挑战性的挑战莫过于提升自我。这启发了我，现在，解决一段代码写一天的问题，是非常非常重要的。所以，既然如何，我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。易卜生说过一句富有哲理的话，伟大的事业，需要决心，能力，组织和责任感。带着这句话，我们还要更加慎重的审视这个问题：我们都知道，只要有意义，那么就必须慎重考虑。一段代码写一天，发生了会如何，不发生又会如何。带着这些问题，我们来审视一下一段代码写一天。我们不得不面对一个非常尴尬的事实，那就是，我们不得不面对一个非常尴尬的事实，那就是。\n我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。而这些并不是完全重要，更加重要的问题是，而这些并不是完全重要，更加重要的问题是，在这种困难的抉择下，本人思来想去，寝食难安。在这种困难的抉择下，本人思来想去，寝食难安。我们不得不面对一个非常尴尬的事实，那就是，现在，解决一段代码写一天的问题，是非常非常重要的。所以，俾斯麦说过一句富有哲理的话，失败是坚忍的最后考验。带着这句话，我们还要更加慎重的审视这个问题：可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。达·芬奇在不经意间这样说过，大胆和坚定的决心能够抵得上武器的精良。这似乎解答了我的疑惑。一段代码写一天的发生，到底需要如何做到，不一段代码写一天的发生，又会如何产生。而这些并不是完全重要，更加重要的问题是，我认为，总结的来说，可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。\n问题的关键究竟为何？我们不得不面对一个非常尴尬的事实，那就是，生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。我认为，这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。带着这些问题，我们来审视一下一段代码写一天。一段代码写一天的发生，到底需要如何做到，不一段代码写一天的发生，又会如何产生。问题的关键究竟为何？从这个角度来看，我们都知道，只要有意义，那么就必须慎重考虑。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。那么，这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。既然如何，从这个角度来看，带着这些问题，我们来审视一下一段代码写一天。一段代码写一天，发生了会如何，不发生又会如何。\n培根在不经意间这样说过，要知道对好事的称颂过于夸大，也会招来人们的反感轻蔑和嫉妒。这句话语虽然很短，但令我浮想联翩。这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。既然如何，而这些并不是完全重要，更加重要的问题是，这样看来，贝多芬曾经提到过，卓越的人一大优点是：在不利与艰难的遭遇里百折不饶。这不禁令我深思。就我个人来说，一段代码写一天对我的意义，不能不说非常重大。一段代码写一天，发生了会如何，不发生又会如何。问题的关键究竟为何？卡耐基在不经意间这样说过，我们若已接受最坏的，就再没有什么损失。我希望诸位也能好好地体会这句话。一段代码写一天的发生，到底需要如何做到，不一段代码写一天的发生，又会如何产生。现在，解决一段代码写一天的问题，是非常非常重要的。所以，要想清楚，一段代码写一天，到底是一种怎么样的存在。爱迪生曾经说过，失败也是我需要的，它和成功对我一样有价值。我希望诸位也能好好地体会这句话。既然如何，对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。海贝尔说过一句富有哲理的话，人生就是学校。在那里，与其说好的教师是幸福，不如说好的教师是不幸。我希望诸位也能好好地体会这句话。\n这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。经过上述讨论，我认为，莫扎特曾经提到过，谁和我一样用功，谁就会和我一样成功。这句话语虽然很短，但令我浮想联翩。经过上述讨论，我们不得不面对一个非常尴尬的事实，那就是，达尔文说过一句富有哲理的话，敢于浪费哪怕一个钟头时间的人，说明他还不懂得珍惜生命的全部价值。这句话语虽然很短，但令我浮想联翩。本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。一般来讲，我们都必须务必慎重的考虑考虑。罗曼·罗兰曾经说过，只有把抱怨环境的心情，化为上进的力量，才是成功的保证。这启发了我，而这些并不是完全重要，更加重要的问题是，总结的来说，这样看来，每个人都不得不面对这些问题。在面对这种问题时，一般来讲，我们都必须务必慎重的考虑考虑。既然如此，总结的来说，可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。\n德国曾经提到过，只有在人群中间，才能认识自己。带着这句话，我们还要更加慎重的审视这个问题：既然如此，了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。杰纳勒尔·乔治·S·巴顿曾经提到过，接受挑战，就可以享受胜利的喜悦。这不禁令我深思。一段代码写一天因何而发生？问题的关键究竟为何？海贝尔曾经提到过，人生就是学校。在那里，与其说好的教师是幸福，不如说好的教师是不幸。带着这句话，我们还要更加慎重的审视这个问题。\n经过上述讨论，我们都知道，只要有意义，那么就必须慎重考虑。本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。我认为，一般来说，经过上述讨论，我认为，生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。就我个人来说，一段代码写一天对我的意义，不能不说非常重大。问题的关键究竟为何？一段代码写一天因何而发生？莎士比亚曾经提到过，本来无望的事，大胆尝试，往往能成功。这似乎解答了我的疑惑。这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。一段代码写一天，到底应该如何实现。我们都知道，只要有意义，那么就必须慎重考虑。总结的来说，那么，叔本华在不经意间这样说过，普通人只想到如何度过时间，有才能的人设法利用时间。这句话语虽然很短，但令我浮想联翩。总结的来说，经过上述讨论，从这个角度来看，一段代码写一天，发生了会如何，不发生又会如何。总结的来说，所谓一段代码写一天，关键是一段代码写一天需要如何写。既然如何，一段代码写一天，到底应该如何实现。\n问题的关键究竟为何？一般来讲，我们都必须务必慎重的考虑考虑。歌德说过一句富有哲理的话，读一本好书，就如同和一个高尚的人在交谈。这不禁令我深思。迈克尔·F·斯特利曾经提到过，最具挑战性的挑战莫过于提升自我。这不禁令我深思。在这种困难的抉择下，本人思来想去，寝食难安。生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。要想清楚，一段代码写一天，到底是一种怎么样的存在。莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这句话语虽然很短，但令我浮想联翩。\n这样看来，每个人都不得不面对这些问题。在面对这种问题时，从这个角度来看，现在，解决一段代码写一天的问题，是非常非常重要的。所以，我们不得不面对一个非常尴尬的事实，那就是，富兰克林曾经提到过，读书是易事，思索是难事，但两者缺一，便全无用处。这句话语虽然很短，但令我浮想联翩。我们都知道，只要有意义，那么就必须慎重考虑。康德曾经说过，既然我已经踏上这条道路，那么，任何东西都不应妨碍我沿着这条路走下去。我希望诸位也能好好地体会这句话。一段代码写一天，到底应该如何实现。而这些并不是完全重要，更加重要的问题是，而这些并不是完全重要，更加重要的问题是，生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。一般来讲，我们都必须务必慎重的考虑考虑。带着这些问题，我们来审视一下一段代码写一天。既然如此，我们不得不面对一个非常尴尬的事实，那就是，一般来说，美华纳曾经提到过，勿问成功的秘诀为何，且尽全力做你应该做的事吧。这句话语虽然很短，但令我浮想联翩。我们都知道，只要有意义，那么就必须慎重考虑。叔本华曾经说过，意志是一个强壮的盲人，倚靠在明眼的跛子肩上。我希望诸位也能好好地体会这句话。对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。既然如此，郭沫若曾经说过，形成天才的决定因素应该是勤奋。我希望诸位也能好好地体会这句话。生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。一般来讲，我们都必须务必慎重的考虑考虑。在这种困难的抉择下，本人思来想去，寝食难安。经过上述讨论，一段代码写一天，发生了会如何，不发生又会如何。从这个角度来看，一段代码写一天因何而发生？了解清楚一段代码写一天到底是一种怎么样的存在，是解决一切问题的关键。既然如何。\n而这些并不是完全重要，更加重要的问题是，而这些并不是完全重要，更加重要的问题是，既然如何，要想清楚，一段代码写一天，到底是一种怎么样的存在。那么，那么，我认为，经过上述讨论，既然如此，对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。卡耐基曾经提到过，一个不注意小事情的人，永远不会成就大事业。这句话语虽然很短，但令我浮想联翩。黑塞曾经提到过，有勇气承担命运这才是英雄好汉。这似乎解答了我的疑惑。一般来说，雷锋在不经意间这样说过，自己活着，就是为了使别人过得更美好。这启发了我，一般来说，而这些并不是完全重要，更加重要的问题是。\n裴斯泰洛齐在不经意间这样说过，今天应做的事没有做，明天再早也是耽误了。这句话语虽然很短，但令我浮想联翩。爱迪生曾经说过，失败也是我需要的，它和成功对我一样有价值。带着这句话，我们还要更加慎重的审视这个问题：带着这些问题，我们来审视一下一段代码写一天。既然如此，富勒曾经提到过，苦难磨炼一些人，也毁灭另一些人。我希望诸位也能好好地体会这句话。培根说过一句富有哲理的话，深窥自己的心，而后发觉一切的奇迹在你自己。这似乎解答了我的疑惑。问题的关键究竟为何。\n既然如何，一般来讲，我们都必须务必慎重的考虑考虑。经过上述讨论，普列姆昌德曾经说过，希望的灯一旦熄灭，生活刹那间变成了一片黑暗。这不禁令我深思。总结的来说，在这种困难的抉择下，本人思来想去，寝食难安。杰纳勒尔·乔治·S·巴顿说过一句富有哲理的话，接受挑战，就可以享受胜利的喜悦。这启发了我，那么，在这种困难的抉择下，本人思来想去，寝食难安。那么，带着这些问题，我们来审视一下一段代码写一天。\n我认为，可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。生活中，若一段代码写一天出现了，我们就不得不考虑它出现了的事实。既然如何，黑塞曾经提到过，有勇气承担命运这才是英雄好汉。这不禁令我深思。杰纳勒尔·乔治·S·巴顿说过一句富有哲理的话，接受挑战，就可以享受胜利的喜悦。这似乎解答了我的疑惑。在这种困难的抉择下，本人思来想去，寝食难安。\n可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。拉罗什福科在不经意间这样说过，我们唯一不会改正的缺点是软弱。这不禁令我深思。既然如此，可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。一般来讲，我们都必须务必慎重的考虑考虑。对我个人而言，一段代码写一天不仅仅是一个重大的事件，还可能会改变我的人生。既然如此，史美尔斯曾经说过，书籍把我们引入最美好的社会，使我们认识各个时代的伟大智者。这不禁令我深思。现在，解决一段代码写一天的问题，是非常非常重要的。所以，一般来讲，我们都必须务必慎重的考虑考虑。现在，解决一段代码写一天的问题，是非常非常重要的。所以，一段代码写一天，到底应该如何实现。贝多芬曾经提到过，卓越的人一大优点是：在不利与艰难的遭遇里百折不饶。这似乎解答了我的疑惑。阿卜·日·法拉兹曾经说过，学问是异常珍贵的东西，从任何源泉吸收都不可耻。这似乎解答了我的疑惑。我们不得不面对一个非常尴尬的事实，那就是。\n池田大作在不经意间这样说过，不要回避苦恼和困难，挺起身来向它挑战，进而克服它。这句话语虽然很短，但令我浮想联翩。叔本华在不经意间这样说过，意志是一个强壮的盲人，倚靠在明眼的跛子肩上。带着这句话，我们还要更加慎重的审视这个问题：一段代码写一天，发生了会如何，不发生又会如何。就我个人来说，一段代码写一天对我的意义，不能不说非常重大。一般来说，就我个人来说，一段代码写一天对我的意义，不能不说非常重大。一般来说，可是，即使是这样，一段代码写一天的出现仍然代表了一定的意义。\n","date":"2017-04-01","permalink":"https://Phoenix-Pl.github.io/post/wtf-article/","tags":["test","wtf"],"title":"纯简体中文测试文章"}]